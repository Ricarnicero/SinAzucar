{"version":3,"sources":["../node_modules/@firebase/storage/node_modules/tslib/tslib.es6.js","../node_modules/@firebase/storage/dist/index.esm.js"],"names":["__generator","thisArg","body","f","y","t","g","_","label","sent","trys","ops","next","verb","throw","return","Symbol","iterator","this","n","v","op","TypeError","call","done","value","pop","length","push","e","step","__spreadArrays","s","i","il","arguments","r","Array","k","a","j","jl","DEFAULT_HOST","CONFIG_STORAGE_BUCKET_KEY","DEFAULT_MAX_OPERATION_RETRY_TIME","DEFAULT_MAX_UPLOAD_RETRY_TIME","MIN_SAFE_INTEGER","FirebaseStorageError","code","message","code_","prependCode","message_","serverResponse_","name_","prototype","codeProp","codeEquals","serverResponseProp","setServerResponseProp","serverResponse","Object","defineProperty","get","enumerable","configurable","Code","UNKNOWN","OBJECT_NOT_FOUND","BUCKET_NOT_FOUND","PROJECT_NOT_FOUND","QUOTA_EXCEEDED","UNAUTHENTICATED","UNAUTHORIZED","RETRY_LIMIT_EXCEEDED","INVALID_CHECKSUM","CANCELED","INVALID_EVENT_NAME","INVALID_URL","INVALID_DEFAULT_BUCKET","NO_DEFAULT_BUCKET","CANNOT_SLICE_BLOB","SERVER_FILE_WRONG_SIZE","NO_DOWNLOAD_URL","INVALID_ARGUMENT","INVALID_ARGUMENT_COUNT","APP_DELETED","INVALID_ROOT_OPERATION","INVALID_FORMAT","INTERNAL_ERROR","unknown","index_esm_canceled","cannotSliceBlob","invalidArgument","index","fnName","appDeleted","invalidFormat","format","internalError","StringFormat","RAW","BASE64","BASE64URL","DATA_URL","formatValidator","stringFormat","StringData","data","contentType","dataFromString","stringData","utf8Bytes_","base64Bytes_","dataUrl","parts","DataURLParts","base64","rest","decoded","decodeURIComponent","percentEncodedBytes_","dataURLBytes_","b","c","charCodeAt","Uint8Array","hasMinus","indexOf","hasUnder","hasPlus","hasSlash","replace","bytes","atob","array","dataURL","matches","match","middle","end","substring","ErrorCode","TaskEvent","STATE_CHANGED","InternalTaskState","RUNNING","PAUSING","PAUSED","SUCCESS","CANCELING","ERROR","TaskState","taskStateFromInternalTaskState","state","isDef","p","isJustDef","isFunction","isObject","isNonNullObject","isString","String","isInteger","isNumber","Number","isNativeBlob","isNativeBlobDefined","Blob","NetworkXhrIo","_this","sent_","xhr_","XMLHttpRequest","errorCode_","NO_ERROR","sendPromise_","Promise","resolve","addEventListener","ABORT","NETWORK_ERROR","send","url","method","headers","open","key","hasOwnProperty","setRequestHeader","toString","getErrorCode","getStatus","status","getResponseText","responseText","abort","getResponseHeader","header","addUploadProgressListener","listener","upload","removeUploadProgressListener","removeEventListener","XhrIoPool","createXhrIo","getBlobBuilder","BlobBuilder","WebKitBlobBuilder","FbsBlob","elideCopy","size","blobType","data_","type","ArrayBuffer","byteLength","set","size_","type_","slice","startByte","endByte","realBlob","sliced","start","blob","webkitSlice","mozSlice","buffer","getBlob","args","_i","blobby","map","val","undefined","bb","append","Error","apply","uint8Arrays","finalLength_1","forEach","merged_1","index_1","uploadData","Location","bucket","path","path_","fullServerUrl","encode","encodeURIComponent","bucketOnlyServerUrl","makeFromBucketSpec","bucketString","bucketLocation","makeFromUrl","location","gsRegex","RegExp","hostRegex","groups","regex","indices","postModify","loc","charAt","group","captures","exec","bucketValue","pathValue","invalidUrl","jsonObjectOrNull","obj","JSON","parse","isArray","lastComponent","lastIndexOf","makeUrl","urlPart","makeQueryString","params","queryPart","noXform_","metadata","Mapping","server","local","writable","xform","mappings_","getMappings","mappings","nameMapping","_metadata","fullPath","xformPath","sizeMapping","fromResource","authWrapper","resource","len","mapping","makeStorageReference","addRef","fromResourceString","resourceString","toResourceString","stringify","metadataValidator","MAX_RESULTS_KEY","MAX_MAX_RESULTS","PAGE_TOKEN_KEY","PREFIXES_KEY","ITEMS_KEY","fromBackendResponse","listResult","prefixes","items","nextPageToken","_a","pathWithoutTrailingSlash","reference","_b","_c","item","listOptionsValidator","RequestInfo","handler","timeout","urlParams","errorHandler","progressCallback","successCodes","additionalRetryCodes","handlerCheck","cndn","metadataHandler","xhr","text","listHandler","fromResponseString","downloadUrlHandler","tokens","split","token","alt","downloadUrlFromResourceString","sharedErrorHandler","err","newErr","objectErrorHandler","shared","getMetadata","maxOperationRetryTime","requestInfo","metadataForUpload_","metadataClone","assign","determineContentType_","ResumableUploadStatus","current","total","finalized","checkResumeHeader_","allowed","continueResumableUpload","chunkSize","status_","bytesLeft","bytesToUpload","Math","min","X-Goog-Upload-Command","X-Goog-Upload-Offset","maxUploadRetryTime","uploadStatus","newCurrent","Observer","nextOrObserver","error","complete","observer","UploadTaskSnapshot","bytesTransferred","totalBytes","task","ref","validate","name","specs","passed","minArgs","maxArgs","optional","argMin","argMax","real","countPart","plural","invalidArgumentCount","validator","ArgSpec","self","stringSpec","stringValidator","chainedValidator","v1","v2","uploadDataSpec","metadataSpec","nonNegativeNumberSpec","looseObjectSpec","nullFunctionSpec","index_esm_async","argsToForward","then","UploadTask","transferred_","needToFetchStatus_","needToFetchMetadata_","observers_","error_","uploadUrl_","request_","chunkMultiplier_","resolve_","reject_","ref_","authWrapper_","location_","blob_","metadata_","resumable_","shouldDoResumable_","state_","errorHandler_","completeTransitions_","transition_","metadataErrorHandler_","promise_","reject","start_","makeProgressCallback_","sizeBefore","loaded","updateProgress_","createResumable_","fetchStatus_","fetchMetadata_","continueUpload_","oneShotUpload_","resolveToken_","callback","getAuthToken","authToken","metadataForUpload","X-Goog-Upload-Protocol","X-Goog-Upload-Header-Content-Length","X-Goog-Upload-Header-Content-Type","Content-Type","createResumableUpload","createRequest","makeRequest","getPromise","sizeString","isNaN","getResumableUploadStatus","statusRequest","uploadRequest","newStatus","increaseMultiplier_","metadataRequest","boundary","str","random","genBoundary","preBlobPart","postBlobPart","multipartUpload","multipartRequest","transferred","old","notifyObservers_","cancel","wasPaused","externalState","on","completed","nextOrObserverMessage","nextValidator","observerValidator","nextOrObserverValidator","makeBinder","addObserver_","removeObserver_","binderSpecs","onFulfilled","onRejected","catch","notifyObserver_","splice","finishPromise_","triggered","bind","snapshot","resume","valid","pause","index_esm_Reference","Reference","newRef","child","childPath","newPath","canonicalChildPath","filter","component","join","index_esm_parent","service","put","throwIfRoot_","putString","delete","_xhr","_text","deleteObject","listAll","accumulator","listAllHelper","pageToken","_arguments","generator","opt","nextPage","list","P","fulfilled","rejected","result","options","delimiter","maxResults","isRoot","updateMetadata","getDownloadURL","getDownloadUrl","invalidRootOperation","FailRequest","_appDelete","RequestMap","Map","id","addRequest","request","clear","AuthWrapper","app","authProvider","maker","requestMaker","pool","bucket_","deleted_","app_","extractBucket_","authProvider_","storageRefMaker_","requestMaker_","pool_","service_","maxOperationRetryTime_","maxUploadRetryTime_","requestMap_","config","auth","getImmediate","getToken","response","accessToken","deleteApp","setMaxUploadRetryTime","time","setMaxOperationRetryTime","NetworkRequest","errorCallback","pendingXhr_","backoffId_","canceled_","appDelete_","url_","method_","headers_","body_","successCodes_","additionalRetryCodes_","callback_","errorCallback_","progressCallback_","timeout_","backoffDone","requestWentThrough","wasSuccessCode","canceled","RequestEndStatus","waitSeconds","timeoutId","hitTimeout","cancelState","triggeredCallback","triggerCallback","callWithDelay","millis","setTimeout","success","waitMillis","stopped","stop","wasTimeout","clearTimeout","backoffCallback","progressListener","hitServer","isRetryStatusCode_","successCode","wasCanceled","progressEvent","lengthComputable","appDelete","index_esm_stop","isFiveHundredCode","isExtraRetryCode","isRequestSpecificRetryCode","addAuthHeader_","version","index_cjs_default","SDK_VERSION","addVersionHeader_","Service","authWrapperBucket","internals_","ServiceInternals","test","refFromURL","index_esm_name","index_esm_version","STORAGE_TYPE","factory","container","getProvider","instance","namespaceExports","Storage","INTERNAL","registerComponent","dist_index_cjs","setServiceProps","setMultipleInstances","registerVersion","registerStorage"],"mappings":"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","file":"static/js/9.edce2908.chunk.js","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\nvar _extendStatics = function extendStatics(d, b) {\n  _extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return _extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  _extendStatics(d, b);\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nvar _assign = function __assign() {\n  _assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return _assign.apply(this, arguments);\n};\n\nexport { _assign as __assign };\nexport function __rest(s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\nexport function __param(paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n}\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\nexport function __generator(thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n}\nexport function __exportStar(m, exports) {\n  for (var p in m) {\n    if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n  }\n}\nexport function __values(o) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator],\n      i = 0;\n  if (m) return m.call(o);\n  return {\n    next: function next() {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n}\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n}\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++) {\n    ar = ar.concat(__read(arguments[i]));\n  }\n\n  return ar;\n}\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {\n    s += arguments[i].length;\n  }\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) {\n    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {\n      r[k] = a[j];\n    }\n  }\n\n  return r;\n}\n;\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []),\n      i,\n      q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () {\n    return this;\n  }, i;\n\n  function verb(n) {\n    if (g[n]) i[n] = function (v) {\n      return new Promise(function (a, b) {\n        q.push([n, v, a, b]) > 1 || resume(n, v);\n      });\n    };\n  }\n\n  function resume(n, v) {\n    try {\n      step(g[n](v));\n    } catch (e) {\n      settle(q[0][3], e);\n    }\n  }\n\n  function step(r) {\n    r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);\n  }\n\n  function fulfill(value) {\n    resume(\"next\", value);\n  }\n\n  function reject(value) {\n    resume(\"throw\", value);\n  }\n\n  function settle(f, v) {\n    if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);\n  }\n}\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) {\n    throw e;\n  }), verb(\"return\"), i[Symbol.iterator] = function () {\n    return this;\n  }, i;\n\n  function verb(n, f) {\n    i[n] = o[n] ? function (v) {\n      return (p = !p) ? {\n        value: __await(o[n](v)),\n        done: n === \"return\"\n      } : f ? f(v) : v;\n    } : f;\n  }\n}\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator],\n      i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () {\n    return this;\n  }, i);\n\n  function verb(n) {\n    i[n] = o[n] && function (v) {\n      return new Promise(function (resolve, reject) {\n        v = o[n](v), settle(resolve, reject, v.done, v.value);\n      });\n    };\n  }\n\n  function settle(resolve, reject, d, v) {\n    Promise.resolve(v).then(function (v) {\n      resolve({\n        value: v,\n        done: d\n      });\n    }, reject);\n  }\n}\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) {\n    Object.defineProperty(cooked, \"raw\", {\n      value: raw\n    });\n  } else {\n    cooked.raw = raw;\n  }\n\n  return cooked;\n}\n;\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result.default = mod;\n  return result;\n}\nexport function __importDefault(mod) {\n  return mod && mod.__esModule ? mod : {\n    default: mod\n  };\n}","import firebase from '@firebase/app';\nimport { __awaiter, __generator, __spreadArrays } from 'tslib';\nimport { Component } from '@firebase/component';\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @fileoverview Constants used in the Firebase Storage library.\r\n */\n\n/**\r\n * Domain name for firebase storage.\r\n */\n\nvar DEFAULT_HOST = 'firebasestorage.googleapis.com';\n/**\r\n * The key in Firebase config json for the storage bucket.\r\n */\n\nvar CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';\n/**\r\n * 2 minutes\r\n *\r\n * The timeout for all operations except upload.\r\n */\n\nvar DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;\n/**\r\n * 10 minutes\r\n *\r\n * The timeout for upload.\r\n */\n\nvar DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 1000;\n/**\r\n * This is the value of Number.MIN_SAFE_INTEGER, which is not well supported\r\n * enough for us to use it directly.\r\n */\n\nvar MIN_SAFE_INTEGER = -9007199254740991;\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar FirebaseStorageError =\n/** @class */\nfunction () {\n  function FirebaseStorageError(code, message) {\n    this.code_ = prependCode(code);\n    this.message_ = 'Firebase Storage: ' + message;\n    this.serverResponse_ = null;\n    this.name_ = 'FirebaseError';\n  }\n\n  FirebaseStorageError.prototype.codeProp = function () {\n    return this.code;\n  };\n\n  FirebaseStorageError.prototype.codeEquals = function (code) {\n    return prependCode(code) === this.codeProp();\n  };\n\n  FirebaseStorageError.prototype.serverResponseProp = function () {\n    return this.serverResponse_;\n  };\n\n  FirebaseStorageError.prototype.setServerResponseProp = function (serverResponse) {\n    this.serverResponse_ = serverResponse;\n  };\n\n  Object.defineProperty(FirebaseStorageError.prototype, \"name\", {\n    get: function get() {\n      return this.name_;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseStorageError.prototype, \"code\", {\n    get: function get() {\n      return this.code_;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseStorageError.prototype, \"message\", {\n    get: function get() {\n      return this.message_;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseStorageError.prototype, \"serverResponse\", {\n    get: function get() {\n      return this.serverResponse_;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return FirebaseStorageError;\n}();\n\nvar Code = {\n  // Shared between all platforms\n  UNKNOWN: 'unknown',\n  OBJECT_NOT_FOUND: 'object-not-found',\n  BUCKET_NOT_FOUND: 'bucket-not-found',\n  PROJECT_NOT_FOUND: 'project-not-found',\n  QUOTA_EXCEEDED: 'quota-exceeded',\n  UNAUTHENTICATED: 'unauthenticated',\n  UNAUTHORIZED: 'unauthorized',\n  RETRY_LIMIT_EXCEEDED: 'retry-limit-exceeded',\n  INVALID_CHECKSUM: 'invalid-checksum',\n  CANCELED: 'canceled',\n  // JS specific\n  INVALID_EVENT_NAME: 'invalid-event-name',\n  INVALID_URL: 'invalid-url',\n  INVALID_DEFAULT_BUCKET: 'invalid-default-bucket',\n  NO_DEFAULT_BUCKET: 'no-default-bucket',\n  CANNOT_SLICE_BLOB: 'cannot-slice-blob',\n  SERVER_FILE_WRONG_SIZE: 'server-file-wrong-size',\n  NO_DOWNLOAD_URL: 'no-download-url',\n  INVALID_ARGUMENT: 'invalid-argument',\n  INVALID_ARGUMENT_COUNT: 'invalid-argument-count',\n  APP_DELETED: 'app-deleted',\n  INVALID_ROOT_OPERATION: 'invalid-root-operation',\n  INVALID_FORMAT: 'invalid-format',\n  INTERNAL_ERROR: 'internal-error'\n};\n\nfunction prependCode(code) {\n  return 'storage/' + code;\n}\n\nfunction unknown() {\n  var message = 'An unknown error occurred, please check the error payload for ' + 'server response.';\n  return new FirebaseStorageError(Code.UNKNOWN, message);\n}\n\nfunction objectNotFound(path) {\n  return new FirebaseStorageError(Code.OBJECT_NOT_FOUND, \"Object '\" + path + \"' does not exist.\");\n}\n\nfunction quotaExceeded(bucket) {\n  return new FirebaseStorageError(Code.QUOTA_EXCEEDED, \"Quota for bucket '\" + bucket + \"' exceeded, please view quota on \" + 'https://firebase.google.com/pricing/.');\n}\n\nfunction unauthenticated() {\n  var message = 'User is not authenticated, please authenticate using Firebase ' + 'Authentication and try again.';\n  return new FirebaseStorageError(Code.UNAUTHENTICATED, message);\n}\n\nfunction unauthorized(path) {\n  return new FirebaseStorageError(Code.UNAUTHORIZED, \"User does not have permission to access '\" + path + \"'.\");\n}\n\nfunction retryLimitExceeded() {\n  return new FirebaseStorageError(Code.RETRY_LIMIT_EXCEEDED, 'Max retry time for operation exceeded, please try again.');\n}\n\nfunction canceled() {\n  return new FirebaseStorageError(Code.CANCELED, 'User canceled the upload/download.');\n}\n\nfunction invalidUrl(url) {\n  return new FirebaseStorageError(Code.INVALID_URL, \"Invalid URL '\" + url + \"'.\");\n}\n\nfunction invalidDefaultBucket(bucket) {\n  return new FirebaseStorageError(Code.INVALID_DEFAULT_BUCKET, \"Invalid default bucket '\" + bucket + \"'.\");\n}\n\nfunction noDefaultBucket() {\n  return new FirebaseStorageError(Code.NO_DEFAULT_BUCKET, 'No default bucket ' + \"found. Did you set the '\" + CONFIG_STORAGE_BUCKET_KEY + \"' property when initializing the app?\");\n}\n\nfunction cannotSliceBlob() {\n  return new FirebaseStorageError(Code.CANNOT_SLICE_BLOB, 'Cannot slice blob for upload. Please retry the upload.');\n}\n\nfunction serverFileWrongSize() {\n  return new FirebaseStorageError(Code.SERVER_FILE_WRONG_SIZE, 'Server recorded incorrect upload file size, please retry the upload.');\n}\n\nfunction noDownloadURL() {\n  return new FirebaseStorageError(Code.NO_DOWNLOAD_URL, 'The given file does not have any download URLs.');\n}\n\nfunction invalidArgument(index, fnName, message) {\n  return new FirebaseStorageError(Code.INVALID_ARGUMENT, 'Invalid argument in `' + fnName + '` at index ' + index + ': ' + message);\n}\n\nfunction invalidArgumentCount(argMin, argMax, fnName, real) {\n  var countPart;\n  var plural;\n\n  if (argMin === argMax) {\n    countPart = argMin;\n    plural = argMin === 1 ? 'argument' : 'arguments';\n  } else {\n    countPart = 'between ' + argMin + ' and ' + argMax;\n    plural = 'arguments';\n  }\n\n  return new FirebaseStorageError(Code.INVALID_ARGUMENT_COUNT, 'Invalid argument count in `' + fnName + '`: Expected ' + countPart + ' ' + plural + ', received ' + real + '.');\n}\n\nfunction appDeleted() {\n  return new FirebaseStorageError(Code.APP_DELETED, 'The Firebase app was deleted.');\n}\n/**\r\n * @param name The name of the operation that was invalid.\r\n */\n\n\nfunction invalidRootOperation(name) {\n  return new FirebaseStorageError(Code.INVALID_ROOT_OPERATION, \"The operation '\" + name + \"' cannot be performed on a root reference, create a non-root \" + \"reference using child, such as .child('file.png').\");\n}\n/**\r\n * @param format The format that was not valid.\r\n * @param message A message describing the format violation.\r\n */\n\n\nfunction invalidFormat(format, message) {\n  return new FirebaseStorageError(Code.INVALID_FORMAT, \"String does not match format '\" + format + \"': \" + message);\n}\n/**\r\n * @param message A message describing the internal error.\r\n */\n\n\nfunction internalError(message) {\n  throw new FirebaseStorageError(Code.INTERNAL_ERROR, 'Internal error: ' + message);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar StringFormat = {\n  RAW: 'raw',\n  BASE64: 'base64',\n  BASE64URL: 'base64url',\n  DATA_URL: 'data_url'\n};\n\nfunction formatValidator(stringFormat) {\n  switch (stringFormat) {\n    case StringFormat.RAW:\n    case StringFormat.BASE64:\n    case StringFormat.BASE64URL:\n    case StringFormat.DATA_URL:\n      return;\n\n    default:\n      throw 'Expected one of the event types: [' + StringFormat.RAW + ', ' + StringFormat.BASE64 + ', ' + StringFormat.BASE64URL + ', ' + StringFormat.DATA_URL + '].';\n  }\n}\n/**\r\n * @struct\r\n */\n\n\nvar StringData =\n/** @class */\nfunction () {\n  function StringData(data, contentType) {\n    this.data = data;\n    this.contentType = contentType || null;\n  }\n\n  return StringData;\n}();\n\nfunction dataFromString(format, stringData) {\n  switch (format) {\n    case StringFormat.RAW:\n      return new StringData(utf8Bytes_(stringData));\n\n    case StringFormat.BASE64:\n    case StringFormat.BASE64URL:\n      return new StringData(base64Bytes_(format, stringData));\n\n    case StringFormat.DATA_URL:\n      return new StringData(dataURLBytes_(stringData), dataURLContentType_(stringData));\n    // do nothing\n  } // assert(false);\n\n\n  throw unknown();\n}\n\nfunction utf8Bytes_(value) {\n  var b = [];\n\n  for (var i = 0; i < value.length; i++) {\n    var c = value.charCodeAt(i);\n\n    if (c <= 127) {\n      b.push(c);\n    } else {\n      if (c <= 2047) {\n        b.push(192 | c >> 6, 128 | c & 63);\n      } else {\n        if ((c & 64512) === 55296) {\n          // The start of a surrogate pair.\n          var valid = i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;\n\n          if (!valid) {\n            // The second surrogate wasn't there.\n            b.push(239, 191, 189);\n          } else {\n            var hi = c;\n            var lo = value.charCodeAt(++i);\n            c = 65536 | (hi & 1023) << 10 | lo & 1023;\n            b.push(240 | c >> 18, 128 | c >> 12 & 63, 128 | c >> 6 & 63, 128 | c & 63);\n          }\n        } else {\n          if ((c & 64512) === 56320) {\n            // Invalid low surrogate.\n            b.push(239, 191, 189);\n          } else {\n            b.push(224 | c >> 12, 128 | c >> 6 & 63, 128 | c & 63);\n          }\n        }\n      }\n    }\n  }\n\n  return new Uint8Array(b);\n}\n\nfunction percentEncodedBytes_(value) {\n  var decoded;\n\n  try {\n    decoded = decodeURIComponent(value);\n  } catch (e) {\n    throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\n  }\n\n  return utf8Bytes_(decoded);\n}\n\nfunction base64Bytes_(format, value) {\n  switch (format) {\n    case StringFormat.BASE64:\n      {\n        var hasMinus = value.indexOf('-') !== -1;\n        var hasUnder = value.indexOf('_') !== -1;\n\n        if (hasMinus || hasUnder) {\n          var invalidChar = hasMinus ? '-' : '_';\n          throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64url encoded?\");\n        }\n\n        break;\n      }\n\n    case StringFormat.BASE64URL:\n      {\n        var hasPlus = value.indexOf('+') !== -1;\n        var hasSlash = value.indexOf('/') !== -1;\n\n        if (hasPlus || hasSlash) {\n          var invalidChar = hasPlus ? '+' : '/';\n          throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\");\n        }\n\n        value = value.replace(/-/g, '+').replace(/_/g, '/');\n        break;\n      }\n    // do nothing\n  }\n\n  var bytes;\n\n  try {\n    bytes = atob(value);\n  } catch (e) {\n    throw invalidFormat(format, 'Invalid character found');\n  }\n\n  var array = new Uint8Array(bytes.length);\n\n  for (var i = 0; i < bytes.length; i++) {\n    array[i] = bytes.charCodeAt(i);\n  }\n\n  return array;\n}\n/**\r\n * @struct\r\n */\n\n\nvar DataURLParts =\n/** @class */\nfunction () {\n  function DataURLParts(dataURL) {\n    this.base64 = false;\n    this.contentType = null;\n    var matches = dataURL.match(/^data:([^,]+)?,/);\n\n    if (matches === null) {\n      throw invalidFormat(StringFormat.DATA_URL, \"Must be formatted 'data:[<mediatype>][;base64],<data>\");\n    }\n\n    var middle = matches[1] || null;\n\n    if (middle != null) {\n      this.base64 = endsWith(middle, ';base64');\n      this.contentType = this.base64 ? middle.substring(0, middle.length - ';base64'.length) : middle;\n    }\n\n    this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\n  }\n\n  return DataURLParts;\n}();\n\nfunction dataURLBytes_(dataUrl) {\n  var parts = new DataURLParts(dataUrl);\n\n  if (parts.base64) {\n    return base64Bytes_(StringFormat.BASE64, parts.rest);\n  } else {\n    return percentEncodedBytes_(parts.rest);\n  }\n}\n\nfunction dataURLContentType_(dataUrl) {\n  var parts = new DataURLParts(dataUrl);\n  return parts.contentType;\n}\n\nfunction endsWith(s, end) {\n  var longEnough = s.length >= end.length;\n\n  if (!longEnough) {\n    return false;\n  }\n\n  return s.substring(s.length - end.length) === end;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar TaskEvent = {\n  /** Triggered whenever the task changes or progress is updated. */\n  STATE_CHANGED: 'state_changed'\n};\nvar InternalTaskState = {\n  RUNNING: 'running',\n  PAUSING: 'pausing',\n  PAUSED: 'paused',\n  SUCCESS: 'success',\n  CANCELING: 'canceling',\n  CANCELED: 'canceled',\n  ERROR: 'error'\n};\nvar TaskState = {\n  /** The task is currently transferring data. */\n  RUNNING: 'running',\n\n  /** The task was paused by the user. */\n  PAUSED: 'paused',\n\n  /** The task completed successfully. */\n  SUCCESS: 'success',\n\n  /** The task was canceled. */\n  CANCELED: 'canceled',\n\n  /** The task failed with an error. */\n  ERROR: 'error'\n};\n\nfunction taskStateFromInternalTaskState(state) {\n  switch (state) {\n    case InternalTaskState.RUNNING:\n    case InternalTaskState.PAUSING:\n    case InternalTaskState.CANCELING:\n      return TaskState.RUNNING;\n\n    case InternalTaskState.PAUSED:\n      return TaskState.PAUSED;\n\n    case InternalTaskState.SUCCESS:\n      return TaskState.SUCCESS;\n\n    case InternalTaskState.CANCELED:\n      return TaskState.CANCELED;\n\n    case InternalTaskState.ERROR:\n      return TaskState.ERROR;\n\n    default:\n      // TODO(andysoto): assert(false);\n      return TaskState.ERROR;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @return False if the object is undefined or null, true otherwise.\r\n */\n\n\nfunction isDef(p) {\n  return p != null;\n}\n\nfunction isJustDef(p) {\n  return p !== void 0;\n}\n\nfunction isFunction(p) {\n  return typeof p === 'function';\n}\n\nfunction isObject(p) {\n  return typeof p === 'object';\n}\n\nfunction isNonNullObject(p) {\n  return isObject(p) && p !== null;\n}\n\nfunction isNonArrayObject(p) {\n  return isObject(p) && !Array.isArray(p);\n}\n\nfunction isString(p) {\n  return typeof p === 'string' || p instanceof String;\n}\n\nfunction isInteger(p) {\n  return isNumber(p) && Number.isInteger(p);\n}\n\nfunction isNumber(p) {\n  return typeof p === 'number' || p instanceof Number;\n}\n\nfunction isNativeBlob(p) {\n  return isNativeBlobDefined() && p instanceof Blob;\n}\n\nfunction isNativeBlobDefined() {\n  return typeof Blob !== 'undefined';\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @enum{number}\r\n */\n\n\nvar ErrorCode;\n\n(function (ErrorCode) {\n  ErrorCode[ErrorCode[\"NO_ERROR\"] = 0] = \"NO_ERROR\";\n  ErrorCode[ErrorCode[\"NETWORK_ERROR\"] = 1] = \"NETWORK_ERROR\";\n  ErrorCode[ErrorCode[\"ABORT\"] = 2] = \"ABORT\";\n})(ErrorCode || (ErrorCode = {}));\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * We use this instead of goog.net.XhrIo because goog.net.XhrIo is hyuuuuge and\r\n * doesn't work in React Native on Android.\r\n */\n\n\nvar NetworkXhrIo =\n/** @class */\nfunction () {\n  function NetworkXhrIo() {\n    var _this = this;\n\n    this.sent_ = false;\n    this.xhr_ = new XMLHttpRequest();\n    this.errorCode_ = ErrorCode.NO_ERROR;\n    this.sendPromise_ = new Promise(function (resolve) {\n      _this.xhr_.addEventListener('abort', function () {\n        _this.errorCode_ = ErrorCode.ABORT;\n        resolve(_this);\n      });\n\n      _this.xhr_.addEventListener('error', function () {\n        _this.errorCode_ = ErrorCode.NETWORK_ERROR;\n        resolve(_this);\n      });\n\n      _this.xhr_.addEventListener('load', function () {\n        resolve(_this);\n      });\n    });\n  }\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.send = function (url, method, body, headers) {\n    if (this.sent_) {\n      throw internalError('cannot .send() more than once');\n    }\n\n    this.sent_ = true;\n    this.xhr_.open(method, url, true);\n\n    if (isDef(headers)) {\n      for (var key in headers) {\n        if (headers.hasOwnProperty(key)) {\n          this.xhr_.setRequestHeader(key, headers[key].toString());\n        }\n      }\n    }\n\n    if (isDef(body)) {\n      this.xhr_.send(body);\n    } else {\n      this.xhr_.send();\n    }\n\n    return this.sendPromise_;\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.getErrorCode = function () {\n    if (!this.sent_) {\n      throw internalError('cannot .getErrorCode() before sending');\n    }\n\n    return this.errorCode_;\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.getStatus = function () {\n    if (!this.sent_) {\n      throw internalError('cannot .getStatus() before sending');\n    }\n\n    try {\n      return this.xhr_.status;\n    } catch (e) {\n      return -1;\n    }\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.getResponseText = function () {\n    if (!this.sent_) {\n      throw internalError('cannot .getResponseText() before sending');\n    }\n\n    return this.xhr_.responseText;\n  };\n  /**\r\n   * Aborts the request.\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.abort = function () {\n    this.xhr_.abort();\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.getResponseHeader = function (header) {\n    return this.xhr_.getResponseHeader(header);\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.addUploadProgressListener = function (listener) {\n    if (isDef(this.xhr_.upload)) {\n      this.xhr_.upload.addEventListener('progress', listener);\n    }\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.removeUploadProgressListener = function (listener) {\n    if (isDef(this.xhr_.upload)) {\n      this.xhr_.upload.removeEventListener('progress', listener);\n    }\n  };\n\n  return NetworkXhrIo;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Factory-like class for creating XhrIo instances.\r\n */\n\n\nvar XhrIoPool =\n/** @class */\nfunction () {\n  function XhrIoPool() {}\n\n  XhrIoPool.prototype.createXhrIo = function () {\n    return new NetworkXhrIo();\n  };\n\n  return XhrIoPool;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction getBlobBuilder() {\n  if (typeof BlobBuilder !== 'undefined') {\n    return BlobBuilder;\n  } else if (typeof WebKitBlobBuilder !== 'undefined') {\n    return WebKitBlobBuilder;\n  } else {\n    return undefined;\n  }\n}\n/**\r\n * Concatenates one or more values together and converts them to a Blob.\r\n *\r\n * @param args The values that will make up the resulting blob.\r\n * @return The blob.\r\n */\n\n\nfunction getBlob() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  var BlobBuilder = getBlobBuilder();\n\n  if (BlobBuilder !== undefined) {\n    var bb = new BlobBuilder();\n\n    for (var i = 0; i < args.length; i++) {\n      bb.append(args[i]);\n    }\n\n    return bb.getBlob();\n  } else {\n    if (isNativeBlobDefined()) {\n      return new Blob(args);\n    } else {\n      throw Error(\"This browser doesn't seem to support creating Blobs\");\n    }\n  }\n}\n/**\r\n * Slices the blob. The returned blob contains data from the start byte\r\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\r\n *\r\n * @param blob The blob to be sliced.\r\n * @param start Index of the starting byte.\r\n * @param end Index of the ending byte.\r\n * @return The blob slice or null if not supported.\r\n */\n\n\nfunction sliceBlob(blob, start, end) {\n  if (blob.webkitSlice) {\n    return blob.webkitSlice(start, end);\n  } else if (blob.mozSlice) {\n    return blob.mozSlice(start, end);\n  } else if (blob.slice) {\n    return blob.slice(start, end);\n  }\n\n  return null;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param opt_elideCopy If true, doesn't copy mutable input data\r\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\r\n *     modified after this blob's construction.\r\n */\n\n\nvar FbsBlob =\n/** @class */\nfunction () {\n  function FbsBlob(data, elideCopy) {\n    var size = 0;\n    var blobType = '';\n\n    if (isNativeBlob(data)) {\n      this.data_ = data;\n      size = data.size;\n      blobType = data.type;\n    } else if (data instanceof ArrayBuffer) {\n      if (elideCopy) {\n        this.data_ = new Uint8Array(data);\n      } else {\n        this.data_ = new Uint8Array(data.byteLength);\n        this.data_.set(new Uint8Array(data));\n      }\n\n      size = this.data_.length;\n    } else if (data instanceof Uint8Array) {\n      if (elideCopy) {\n        this.data_ = data;\n      } else {\n        this.data_ = new Uint8Array(data.length);\n        this.data_.set(data);\n      }\n\n      size = data.length;\n    }\n\n    this.size_ = size;\n    this.type_ = blobType;\n  }\n\n  FbsBlob.prototype.size = function () {\n    return this.size_;\n  };\n\n  FbsBlob.prototype.type = function () {\n    return this.type_;\n  };\n\n  FbsBlob.prototype.slice = function (startByte, endByte) {\n    if (isNativeBlob(this.data_)) {\n      var realBlob = this.data_;\n      var sliced = sliceBlob(realBlob, startByte, endByte);\n\n      if (sliced === null) {\n        return null;\n      }\n\n      return new FbsBlob(sliced);\n    } else {\n      var slice = new Uint8Array(this.data_.buffer, startByte, endByte - startByte);\n      return new FbsBlob(slice, true);\n    }\n  };\n\n  FbsBlob.getBlob = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    if (isNativeBlobDefined()) {\n      var blobby = args.map(function (val) {\n        if (val instanceof FbsBlob) {\n          return val.data_;\n        } else {\n          return val;\n        }\n      });\n      return new FbsBlob(getBlob.apply(null, blobby));\n    } else {\n      var uint8Arrays = args.map(function (val) {\n        if (isString(val)) {\n          return dataFromString(StringFormat.RAW, val).data;\n        } else {\n          // Blobs don't exist, so this has to be a Uint8Array.\n          return val.data_;\n        }\n      });\n      var finalLength_1 = 0;\n      uint8Arrays.forEach(function (array) {\n        finalLength_1 += array.byteLength;\n      });\n      var merged_1 = new Uint8Array(finalLength_1);\n      var index_1 = 0;\n      uint8Arrays.forEach(function (array) {\n        for (var i = 0; i < array.length; i++) {\n          merged_1[index_1++] = array[i];\n        }\n      });\n      return new FbsBlob(merged_1, true);\n    }\n  };\n\n  FbsBlob.prototype.uploadData = function () {\n    return this.data_;\n  };\n\n  return FbsBlob;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @struct\r\n */\n\n\nvar Location =\n/** @class */\nfunction () {\n  function Location(bucket, path) {\n    this.bucket = bucket;\n    this.path_ = path;\n  }\n\n  Object.defineProperty(Location.prototype, \"path\", {\n    get: function get() {\n      return this.path_;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Location.prototype, \"isRoot\", {\n    get: function get() {\n      return this.path.length === 0;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Location.prototype.fullServerUrl = function () {\n    var encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\n  };\n\n  Location.prototype.bucketOnlyServerUrl = function () {\n    var encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o';\n  };\n\n  Location.makeFromBucketSpec = function (bucketString) {\n    var bucketLocation;\n\n    try {\n      bucketLocation = Location.makeFromUrl(bucketString);\n    } catch (e) {\n      // Not valid URL, use as-is. This lets you put bare bucket names in\n      // config.\n      return new Location(bucketString, '');\n    }\n\n    if (bucketLocation.path === '') {\n      return bucketLocation;\n    } else {\n      throw invalidDefaultBucket(bucketString);\n    }\n  };\n\n  Location.makeFromUrl = function (url) {\n    var location = null;\n    var bucketDomain = '([A-Za-z0-9.\\\\-_]+)';\n\n    function gsModify(loc) {\n      if (loc.path.charAt(loc.path.length - 1) === '/') {\n        loc.path_ = loc.path_.slice(0, -1);\n      }\n    }\n\n    var gsPath = '(/(.*))?$';\n    var path = '(/([^?#]*).*)?$';\n    var gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\n    var gsIndices = {\n      bucket: 1,\n      path: 3\n    };\n\n    function httpModify(loc) {\n      loc.path_ = decodeURIComponent(loc.path);\n    }\n\n    var version = 'v[A-Za-z0-9_]+';\n    var hostRegex = DEFAULT_HOST.replace(/[.]/g, '\\\\.');\n    var httpRegex = new RegExp(\"^https?://\" + hostRegex + \"/\" + version + \"/b/\" + bucketDomain + \"/o\" + path, 'i');\n    var httpIndices = {\n      bucket: 1,\n      path: 3\n    };\n    var groups = [{\n      regex: gsRegex,\n      indices: gsIndices,\n      postModify: gsModify\n    }, {\n      regex: httpRegex,\n      indices: httpIndices,\n      postModify: httpModify\n    }];\n\n    for (var i = 0; i < groups.length; i++) {\n      var group = groups[i];\n      var captures = group.regex.exec(url);\n\n      if (captures) {\n        var bucketValue = captures[group.indices.bucket];\n        var pathValue = captures[group.indices.path];\n\n        if (!pathValue) {\n          pathValue = '';\n        }\n\n        location = new Location(bucketValue, pathValue);\n        group.postModify(location);\n        break;\n      }\n    }\n\n    if (location == null) {\n      throw invalidUrl(url);\n    }\n\n    return location;\n  };\n\n  return Location;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns the Object resulting from parsing the given JSON, or null if the\r\n * given string does not represent a JSON object.\r\n */\n\n\nfunction jsonObjectOrNull(s) {\n  var obj;\n\n  try {\n    obj = JSON.parse(s);\n  } catch (e) {\n    return null;\n  }\n\n  if (isNonArrayObject(obj)) {\n    return obj;\n  } else {\n    return null;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @fileoverview Contains helper methods for manipulating paths.\r\n */\n\n/**\r\n * @return Null if the path is already at the root.\r\n */\n\n\nfunction parent(path) {\n  if (path.length === 0) {\n    return null;\n  }\n\n  var index = path.lastIndexOf('/');\n\n  if (index === -1) {\n    return '';\n  }\n\n  var newPath = path.slice(0, index);\n  return newPath;\n}\n\nfunction child(path, childPath) {\n  var canonicalChildPath = childPath.split('/').filter(function (component) {\n    return component.length > 0;\n  }).join('/');\n\n  if (path.length === 0) {\n    return canonicalChildPath;\n  } else {\n    return path + '/' + canonicalChildPath;\n  }\n}\n/**\r\n * Returns the last component of a path.\r\n * '/foo/bar' -> 'bar'\r\n * '/foo/bar/baz/' -> 'baz/'\r\n * '/a' -> 'a'\r\n */\n\n\nfunction lastComponent(path) {\n  var index = path.lastIndexOf('/', path.length - 2);\n\n  if (index === -1) {\n    return path;\n  } else {\n    return path.slice(index + 1);\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction makeUrl(urlPart) {\n  return \"https://\" + DEFAULT_HOST + \"/v0\" + urlPart;\n}\n\nfunction makeQueryString(params) {\n  var encode = encodeURIComponent;\n  var queryPart = '?';\n\n  for (var key in params) {\n    if (params.hasOwnProperty(key)) {\n      // @ts-ignore TODO: remove once typescript is upgraded to 3.5.x\n      var nextPart = encode(key) + '=' + encode(params[key]);\n      queryPart = queryPart + nextPart + '&';\n    }\n  } // Chop off the extra '&' or '?' on the end\n\n\n  queryPart = queryPart.slice(0, -1);\n  return queryPart;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction noXform_(metadata, value) {\n  return value;\n}\n/**\r\n * @struct\r\n */\n\n\nvar Mapping =\n/** @class */\nfunction () {\n  function Mapping(server, local, writable, xform) {\n    this.server = server;\n    this.local = local || server;\n    this.writable = !!writable;\n    this.xform = xform || noXform_;\n  }\n\n  return Mapping;\n}();\n\nvar mappings_ = null;\n\nfunction xformPath(fullPath) {\n  if (!isString(fullPath) || fullPath.length < 2) {\n    return fullPath;\n  } else {\n    return lastComponent(fullPath);\n  }\n}\n\nfunction getMappings() {\n  if (mappings_) {\n    return mappings_;\n  }\n\n  var mappings = [];\n  mappings.push(new Mapping('bucket'));\n  mappings.push(new Mapping('generation'));\n  mappings.push(new Mapping('metageneration'));\n  mappings.push(new Mapping('name', 'fullPath', true));\n\n  function mappingsXformPath(_metadata, fullPath) {\n    return xformPath(fullPath);\n  }\n\n  var nameMapping = new Mapping('name');\n  nameMapping.xform = mappingsXformPath;\n  mappings.push(nameMapping);\n  /**\r\n   * Coerces the second param to a number, if it is defined.\r\n   */\n\n  function xformSize(_metadata, size) {\n    if (isDef(size)) {\n      return Number(size);\n    } else {\n      return size;\n    }\n  }\n\n  var sizeMapping = new Mapping('size');\n  sizeMapping.xform = xformSize;\n  mappings.push(sizeMapping);\n  mappings.push(new Mapping('timeCreated'));\n  mappings.push(new Mapping('updated'));\n  mappings.push(new Mapping('md5Hash', null, true));\n  mappings.push(new Mapping('cacheControl', null, true));\n  mappings.push(new Mapping('contentDisposition', null, true));\n  mappings.push(new Mapping('contentEncoding', null, true));\n  mappings.push(new Mapping('contentLanguage', null, true));\n  mappings.push(new Mapping('contentType', null, true));\n  mappings.push(new Mapping('metadata', 'customMetadata', true));\n  mappings_ = mappings;\n  return mappings_;\n}\n\nfunction addRef(metadata, authWrapper) {\n  function generateRef() {\n    var bucket = metadata['bucket'];\n    var path = metadata['fullPath'];\n    var loc = new Location(bucket, path);\n    return authWrapper.makeStorageReference(loc);\n  }\n\n  Object.defineProperty(metadata, 'ref', {\n    get: generateRef\n  });\n}\n\nfunction fromResource(authWrapper, resource, mappings) {\n  var metadata = {};\n  metadata['type'] = 'file';\n  var len = mappings.length;\n\n  for (var i = 0; i < len; i++) {\n    var mapping = mappings[i];\n    metadata[mapping.local] = mapping.xform(metadata, resource[mapping.server]);\n  }\n\n  addRef(metadata, authWrapper);\n  return metadata;\n}\n\nfunction fromResourceString(authWrapper, resourceString, mappings) {\n  var obj = jsonObjectOrNull(resourceString);\n\n  if (obj === null) {\n    return null;\n  }\n\n  var resource = obj;\n  return fromResource(authWrapper, resource, mappings);\n}\n\nfunction downloadUrlFromResourceString(metadata, resourceString) {\n  var obj = jsonObjectOrNull(resourceString);\n\n  if (obj === null) {\n    return null;\n  }\n\n  if (!isString(obj['downloadTokens'])) {\n    // This can happen if objects are uploaded through GCS and retrieved\n    // through list, so we don't want to throw an Error.\n    return null;\n  }\n\n  var tokens = obj['downloadTokens'];\n\n  if (tokens.length === 0) {\n    return null;\n  }\n\n  var encode = encodeURIComponent;\n  var tokensList = tokens.split(',');\n  var urls = tokensList.map(function (token) {\n    var bucket = metadata['bucket'];\n    var path = metadata['fullPath'];\n    var urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\n    var base = makeUrl(urlPart);\n    var queryString = makeQueryString({\n      alt: 'media',\n      token: token\n    });\n    return base + queryString;\n  });\n  return urls[0];\n}\n\nfunction toResourceString(metadata, mappings) {\n  var resource = {};\n  var len = mappings.length;\n\n  for (var i = 0; i < len; i++) {\n    var mapping = mappings[i];\n\n    if (mapping.writable) {\n      resource[mapping.server] = metadata[mapping.local];\n    }\n  }\n\n  return JSON.stringify(resource);\n}\n\nfunction metadataValidator(p) {\n  if (!isObject(p) || !p) {\n    throw 'Expected Metadata object.';\n  }\n\n  for (var key in p) {\n    if (p.hasOwnProperty(key)) {\n      var val = p[key];\n\n      if (key === 'customMetadata') {\n        if (!isObject(val)) {\n          throw 'Expected object for \\'customMetadata\\' mapping.';\n        }\n      } else {\n        if (isNonNullObject(val)) {\n          throw \"Mapping for '\" + key + \"' cannot be an object.\";\n        }\n      }\n    }\n  }\n}\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar MAX_RESULTS_KEY = 'maxResults';\nvar MAX_MAX_RESULTS = 1000;\nvar PAGE_TOKEN_KEY = 'pageToken';\nvar PREFIXES_KEY = 'prefixes';\nvar ITEMS_KEY = 'items';\n\nfunction fromBackendResponse(authWrapper, resource) {\n  var listResult = {\n    prefixes: [],\n    items: [],\n    nextPageToken: resource['nextPageToken']\n  };\n  var bucket = authWrapper.bucket();\n\n  if (bucket === null) {\n    throw noDefaultBucket();\n  }\n\n  if (resource[PREFIXES_KEY]) {\n    for (var _i = 0, _a = resource[PREFIXES_KEY]; _i < _a.length; _i++) {\n      var path = _a[_i];\n      var pathWithoutTrailingSlash = path.replace(/\\/$/, '');\n      var reference = authWrapper.makeStorageReference(new Location(bucket, pathWithoutTrailingSlash));\n      listResult.prefixes.push(reference);\n    }\n  }\n\n  if (resource[ITEMS_KEY]) {\n    for (var _b = 0, _c = resource[ITEMS_KEY]; _b < _c.length; _b++) {\n      var item = _c[_b];\n      var reference = authWrapper.makeStorageReference(new Location(bucket, item['name']));\n      listResult.items.push(reference);\n    }\n  }\n\n  return listResult;\n}\n\nfunction fromResponseString(authWrapper, resourceString) {\n  var obj = jsonObjectOrNull(resourceString);\n\n  if (obj === null) {\n    return null;\n  }\n\n  var resource = obj;\n  return fromBackendResponse(authWrapper, resource);\n}\n\nfunction listOptionsValidator(p) {\n  if (!isObject(p) || !p) {\n    throw 'Expected ListOptions object.';\n  }\n\n  for (var key in p) {\n    if (key === MAX_RESULTS_KEY) {\n      if (!isInteger(p[MAX_RESULTS_KEY]) || p[MAX_RESULTS_KEY] <= 0) {\n        throw 'Expected maxResults to be a positive number.';\n      }\n\n      if (p[MAX_RESULTS_KEY] > 1000) {\n        throw \"Expected maxResults to be less than or equal to \" + MAX_MAX_RESULTS + \".\";\n      }\n    } else if (key === PAGE_TOKEN_KEY) {\n      if (p[PAGE_TOKEN_KEY] && !isString(p[PAGE_TOKEN_KEY])) {\n        throw 'Expected pageToken to be string.';\n      }\n    } else {\n      throw 'Unknown option: ' + key;\n    }\n  }\n}\n\nvar RequestInfo =\n/** @class */\nfunction () {\n  function RequestInfo(url, method,\n  /**\r\n   * Returns the value with which to resolve the request's promise. Only called\r\n   * if the request is successful. Throw from this function to reject the\r\n   * returned Request's promise with the thrown error.\r\n   * Note: The XhrIo passed to this function may be reused after this callback\r\n   * returns. Do not keep a reference to it in any way.\r\n   */\n  handler, timeout) {\n    this.url = url;\n    this.method = method;\n    this.handler = handler;\n    this.timeout = timeout;\n    this.urlParams = {};\n    this.headers = {};\n    this.body = null;\n    this.errorHandler = null;\n    /**\r\n     * Called with the current number of bytes uploaded and total size (-1 if not\r\n     * computable) of the request body (i.e. used to report upload progress).\r\n     */\n\n    this.progressCallback = null;\n    this.successCodes = [200];\n    this.additionalRetryCodes = [];\n  }\n\n  return RequestInfo;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Throws the UNKNOWN FirebaseStorageError if cndn is false.\r\n */\n\n\nfunction handlerCheck(cndn) {\n  if (!cndn) {\n    throw unknown();\n  }\n}\n\nfunction metadataHandler(authWrapper, mappings) {\n  function handler(xhr, text) {\n    var metadata = fromResourceString(authWrapper, text, mappings);\n    handlerCheck(metadata !== null);\n    return metadata;\n  }\n\n  return handler;\n}\n\nfunction listHandler(authWrapper) {\n  function handler(xhr, text) {\n    var listResult = fromResponseString(authWrapper, text);\n    handlerCheck(listResult !== null);\n    return listResult;\n  }\n\n  return handler;\n}\n\nfunction downloadUrlHandler(authWrapper, mappings) {\n  function handler(xhr, text) {\n    var metadata = fromResourceString(authWrapper, text, mappings);\n    handlerCheck(metadata !== null);\n    return downloadUrlFromResourceString(metadata, text);\n  }\n\n  return handler;\n}\n\nfunction sharedErrorHandler(location) {\n  function errorHandler(xhr, err) {\n    var newErr;\n\n    if (xhr.getStatus() === 401) {\n      newErr = unauthenticated();\n    } else {\n      if (xhr.getStatus() === 402) {\n        newErr = quotaExceeded(location.bucket);\n      } else {\n        if (xhr.getStatus() === 403) {\n          newErr = unauthorized(location.path);\n        } else {\n          newErr = err;\n        }\n      }\n    }\n\n    newErr.setServerResponseProp(err.serverResponseProp());\n    return newErr;\n  }\n\n  return errorHandler;\n}\n\nfunction objectErrorHandler(location) {\n  var shared = sharedErrorHandler(location);\n\n  function errorHandler(xhr, err) {\n    var newErr = shared(xhr, err);\n\n    if (xhr.getStatus() === 404) {\n      newErr = objectNotFound(location.path);\n    }\n\n    newErr.setServerResponseProp(err.serverResponseProp());\n    return newErr;\n  }\n\n  return errorHandler;\n}\n\nfunction getMetadata(authWrapper, location, mappings) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'GET';\n  var timeout = authWrapper.maxOperationRetryTime();\n  var requestInfo = new RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction list(authWrapper, location, delimiter, pageToken, maxResults) {\n  var urlParams = {};\n\n  if (location.isRoot) {\n    urlParams['prefix'] = '';\n  } else {\n    urlParams['prefix'] = location.path + '/';\n  }\n\n  if (delimiter && delimiter.length > 0) {\n    urlParams['delimiter'] = delimiter;\n  }\n\n  if (pageToken) {\n    urlParams['pageToken'] = pageToken;\n  }\n\n  if (maxResults) {\n    urlParams['maxResults'] = maxResults;\n  }\n\n  var urlPart = location.bucketOnlyServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'GET';\n  var timeout = authWrapper.maxOperationRetryTime();\n  var requestInfo = new RequestInfo(url, method, listHandler(authWrapper), timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\nfunction getDownloadUrl(authWrapper, location, mappings) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'GET';\n  var timeout = authWrapper.maxOperationRetryTime();\n  var requestInfo = new RequestInfo(url, method, downloadUrlHandler(authWrapper, mappings), timeout);\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction updateMetadata(authWrapper, location, metadata, mappings) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'PATCH';\n  var body = toResourceString(metadata, mappings);\n  var headers = {\n    'Content-Type': 'application/json; charset=utf-8'\n  };\n  var timeout = authWrapper.maxOperationRetryTime();\n  var requestInfo = new RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction deleteObject(authWrapper, location) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'DELETE';\n  var timeout = authWrapper.maxOperationRetryTime();\n\n  function handler(_xhr, _text) {}\n\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.successCodes = [200, 204];\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction determineContentType_(metadata, blob) {\n  return metadata && metadata['contentType'] || blob && blob.type() || 'application/octet-stream';\n}\n\nfunction metadataForUpload_(location, blob, metadata) {\n  var metadataClone = Object.assign({}, metadata);\n  metadataClone['fullPath'] = location.path;\n  metadataClone['size'] = blob.size();\n\n  if (!metadataClone['contentType']) {\n    metadataClone['contentType'] = determineContentType_(null, blob);\n  }\n\n  return metadataClone;\n}\n\nfunction multipartUpload(authWrapper, location, mappings, blob, metadata) {\n  var urlPart = location.bucketOnlyServerUrl();\n  var headers = {\n    'X-Goog-Upload-Protocol': 'multipart'\n  };\n\n  function genBoundary() {\n    var str = '';\n\n    for (var i = 0; i < 2; i++) {\n      str = str + Math.random().toString().slice(2);\n    }\n\n    return str;\n  }\n\n  var boundary = genBoundary();\n  headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\n  var metadata_ = metadataForUpload_(location, blob, metadata);\n  var metadataString = toResourceString(metadata_, mappings);\n  var preBlobPart = '--' + boundary + '\\r\\n' + 'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' + metadataString + '\\r\\n--' + boundary + '\\r\\n' + 'Content-Type: ' + metadata_['contentType'] + '\\r\\n\\r\\n';\n  var postBlobPart = '\\r\\n--' + boundary + '--';\n  var body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\n\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n\n  var urlParams = {\n    name: metadata_['fullPath']\n  };\n  var url = makeUrl(urlPart);\n  var method = 'POST';\n  var timeout = authWrapper.maxUploadRetryTime();\n  var requestInfo = new RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * @param current The number of bytes that have been uploaded so far.\r\n * @param total The total number of bytes in the upload.\r\n * @param opt_finalized True if the server has finished the upload.\r\n * @param opt_metadata The upload metadata, should\r\n *     only be passed if opt_finalized is true.\r\n * @struct\r\n */\n\n\nvar ResumableUploadStatus =\n/** @class */\nfunction () {\n  function ResumableUploadStatus(current, total, finalized, metadata) {\n    this.current = current;\n    this.total = total;\n    this.finalized = !!finalized;\n    this.metadata = metadata || null;\n  }\n\n  return ResumableUploadStatus;\n}();\n\nfunction checkResumeHeader_(xhr, allowed) {\n  var status = null;\n\n  try {\n    status = xhr.getResponseHeader('X-Goog-Upload-Status');\n  } catch (e) {\n    handlerCheck(false);\n  }\n\n  var allowedStatus = allowed || ['active'];\n  handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);\n  return status;\n}\n\nfunction createResumableUpload(authWrapper, location, mappings, blob, metadata) {\n  var urlPart = location.bucketOnlyServerUrl();\n  var metadataForUpload = metadataForUpload_(location, blob, metadata);\n  var urlParams = {\n    name: metadataForUpload['fullPath']\n  };\n  var url = makeUrl(urlPart);\n  var method = 'POST';\n  var headers = {\n    'X-Goog-Upload-Protocol': 'resumable',\n    'X-Goog-Upload-Command': 'start',\n    'X-Goog-Upload-Header-Content-Length': blob.size(),\n    'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType'],\n    'Content-Type': 'application/json; charset=utf-8'\n  };\n  var body = toResourceString(metadataForUpload, mappings);\n  var timeout = authWrapper.maxUploadRetryTime();\n\n  function handler(xhr) {\n    checkResumeHeader_(xhr);\n    var url;\n\n    try {\n      url = xhr.getResponseHeader('X-Goog-Upload-URL');\n    } catch (e) {\n      handlerCheck(false);\n    }\n\n    handlerCheck(isString(url));\n    return url;\n  }\n\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n */\n\n\nfunction getResumableUploadStatus(authWrapper, location, url, blob) {\n  var headers = {\n    'X-Goog-Upload-Command': 'query'\n  };\n\n  function handler(xhr) {\n    var status = checkResumeHeader_(xhr, ['active', 'final']);\n    var sizeString = null;\n\n    try {\n      sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\n    } catch (e) {\n      handlerCheck(false);\n    }\n\n    if (!sizeString) {\n      // null or empty string\n      handlerCheck(false);\n    }\n\n    var size = Number(sizeString);\n    handlerCheck(!isNaN(size));\n    return new ResumableUploadStatus(size, blob.size(), status === 'final');\n  }\n\n  var method = 'POST';\n  var timeout = authWrapper.maxUploadRetryTime();\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * Any uploads via the resumable upload API must transfer a number of bytes\r\n * that is a multiple of this number.\r\n */\n\n\nvar resumableUploadChunkSize = 256 * 1024;\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n * @param chunkSize Number of bytes to upload.\r\n * @param status The previous status.\r\n *     If not passed or null, we start from the beginning.\r\n * @throws fbs.Error If the upload is already complete, the passed in status\r\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\r\n *     for upload.\r\n */\n\nfunction continueResumableUpload(location, authWrapper, url, blob, chunkSize, mappings, status, progressCallback) {\n  // TODO(andysoto): standardize on internal asserts\n  // assert(!(opt_status && opt_status.finalized));\n  var status_ = new ResumableUploadStatus(0, 0);\n\n  if (status) {\n    status_.current = status.current;\n    status_.total = status.total;\n  } else {\n    status_.current = 0;\n    status_.total = blob.size();\n  }\n\n  if (blob.size() !== status_.total) {\n    throw serverFileWrongSize();\n  }\n\n  var bytesLeft = status_.total - status_.current;\n  var bytesToUpload = bytesLeft;\n\n  if (chunkSize > 0) {\n    bytesToUpload = Math.min(bytesToUpload, chunkSize);\n  }\n\n  var startByte = status_.current;\n  var endByte = startByte + bytesToUpload;\n  var uploadCommand = bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\n  var headers = {\n    'X-Goog-Upload-Command': uploadCommand,\n    'X-Goog-Upload-Offset': status_.current\n  };\n  var body = blob.slice(startByte, endByte);\n\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n\n  function handler(xhr, text) {\n    // TODO(andysoto): Verify the MD5 of each uploaded range:\n    // the 'x-range-md5' header comes back with status code 308 responses.\n    // We'll only be able to bail out though, because you can't re-upload a\n    // range that you previously uploaded.\n    var uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\n    var newCurrent = status_.current + bytesToUpload;\n    var size = blob.size();\n    var metadata;\n\n    if (uploadStatus === 'final') {\n      metadata = metadataHandler(authWrapper, mappings)(xhr, text);\n    } else {\n      metadata = null;\n    }\n\n    return new ResumableUploadStatus(newCurrent, size, uploadStatus === 'final', metadata);\n  }\n\n  var method = 'POST';\n  var timeout = authWrapper.maxUploadRetryTime();\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.progressCallback = progressCallback || null;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @struct\r\n */\n\n\nvar Observer =\n/** @class */\nfunction () {\n  function Observer(nextOrObserver, error, complete) {\n    var asFunctions = isFunction(nextOrObserver) || isDef(error) || isDef(complete);\n\n    if (asFunctions) {\n      this.next = nextOrObserver;\n      this.error = error || null;\n      this.complete = complete || null;\n    } else {\n      var observer = nextOrObserver;\n      this.next = observer.next || null;\n      this.error = observer.error || null;\n      this.complete = observer.complete || null;\n    }\n  }\n\n  return Observer;\n}();\n\nvar UploadTaskSnapshot =\n/** @class */\nfunction () {\n  function UploadTaskSnapshot(bytesTransferred, totalBytes, state, metadata, task, ref) {\n    this.bytesTransferred = bytesTransferred;\n    this.totalBytes = totalBytes;\n    this.state = state;\n    this.metadata = metadata;\n    this.task = task;\n    this.ref = ref;\n  }\n\n  return UploadTaskSnapshot;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param name Name of the function.\r\n * @param specs Argument specs.\r\n * @param passed The actual arguments passed to the function.\r\n * @throws {fbs.Error} If the arguments are invalid.\r\n */\n\n\nfunction validate(name, specs, passed) {\n  var minArgs = specs.length;\n  var maxArgs = specs.length;\n\n  for (var i = 0; i < specs.length; i++) {\n    if (specs[i].optional) {\n      minArgs = i;\n      break;\n    }\n  }\n\n  var validLength = minArgs <= passed.length && passed.length <= maxArgs;\n\n  if (!validLength) {\n    throw invalidArgumentCount(minArgs, maxArgs, name, passed.length);\n  }\n\n  for (var i = 0; i < passed.length; i++) {\n    try {\n      specs[i].validator(passed[i]);\n    } catch (e) {\n      if (e instanceof Error) {\n        throw invalidArgument(i, name, e.message);\n      } else {\n        throw invalidArgument(i, name, e);\n      }\n    }\n  }\n}\n/**\r\n * @struct\r\n */\n\n\nvar ArgSpec =\n/** @class */\nfunction () {\n  function ArgSpec(validator, optional) {\n    var self = this;\n\n    this.validator = function (p) {\n      if (self.optional && !isJustDef(p)) {\n        return;\n      }\n\n      validator(p);\n    };\n\n    this.optional = !!optional;\n  }\n\n  return ArgSpec;\n}();\n\nfunction and_(v1, v2) {\n  return function (p) {\n    v1(p);\n    v2(p);\n  };\n}\n\nfunction stringSpec(validator, optional) {\n  function stringValidator(p) {\n    if (!isString(p)) {\n      throw 'Expected string.';\n    }\n  }\n\n  var chainedValidator;\n\n  if (validator) {\n    chainedValidator = and_(stringValidator, validator);\n  } else {\n    chainedValidator = stringValidator;\n  }\n\n  return new ArgSpec(chainedValidator, optional);\n}\n\nfunction uploadDataSpec() {\n  function validator(p) {\n    var valid = p instanceof Uint8Array || p instanceof ArrayBuffer || isNativeBlobDefined() && p instanceof Blob;\n\n    if (!valid) {\n      throw 'Expected Blob or File.';\n    }\n  }\n\n  return new ArgSpec(validator);\n}\n\nfunction metadataSpec(optional) {\n  return new ArgSpec(metadataValidator, optional);\n}\n\nfunction listOptionSpec(optional) {\n  return new ArgSpec(listOptionsValidator, optional);\n}\n\nfunction nonNegativeNumberSpec() {\n  function validator(p) {\n    var valid = isNumber(p) && p >= 0;\n\n    if (!valid) {\n      throw 'Expected a number 0 or greater.';\n    }\n  }\n\n  return new ArgSpec(validator);\n}\n\nfunction looseObjectSpec(validator, optional) {\n  function isLooseObjectValidator(p) {\n    var isLooseObject = p === null || isDef(p) && p instanceof Object;\n\n    if (!isLooseObject) {\n      throw 'Expected an Object.';\n    }\n\n    if (validator !== undefined && validator !== null) {\n      validator(p);\n    }\n  }\n\n  return new ArgSpec(isLooseObjectValidator, optional);\n}\n\nfunction nullFunctionSpec(optional) {\n  function validator(p) {\n    var valid = p === null || isFunction(p);\n\n    if (!valid) {\n      throw 'Expected a Function.';\n    }\n  }\n\n  return new ArgSpec(validator, optional);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns a function that invokes f with its arguments asynchronously as a\r\n * microtask, i.e. as soon as possible after the current script returns back\r\n * into browser code.\r\n */\n\n\nfunction async(f) {\n  return function () {\n    var argsToForward = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      argsToForward[_i] = arguments[_i];\n    } // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n\n    Promise.resolve().then(function () {\n      return f.apply(void 0, argsToForward);\n    });\n  };\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\r\n * upload and manage callbacks for various events.\r\n */\n\n\nvar UploadTask =\n/** @class */\nfunction () {\n  /**\r\n   * @param ref The firebaseStorage.Reference object this task came\r\n   *     from, untyped to avoid cyclic dependencies.\r\n   * @param blob The blob to upload.\r\n   */\n  function UploadTask(ref, authWrapper, location, mappings, blob, metadata) {\n    var _this = this;\n\n    if (metadata === void 0) {\n      metadata = null;\n    }\n\n    this.transferred_ = 0;\n    this.needToFetchStatus_ = false;\n    this.needToFetchMetadata_ = false;\n    this.observers_ = [];\n    this.error_ = null;\n    this.uploadUrl_ = null;\n    this.request_ = null;\n    this.chunkMultiplier_ = 1;\n    this.resolve_ = null;\n    this.reject_ = null;\n    this.ref_ = ref;\n    this.authWrapper_ = authWrapper;\n    this.location_ = location;\n    this.blob_ = blob;\n    this.metadata_ = metadata;\n    this.mappings_ = mappings;\n    this.resumable_ = this.shouldDoResumable_(this.blob_);\n    this.state_ = InternalTaskState.RUNNING;\n\n    this.errorHandler_ = function (error) {\n      _this.request_ = null;\n      _this.chunkMultiplier_ = 1;\n\n      if (error.codeEquals(Code.CANCELED)) {\n        _this.needToFetchStatus_ = true;\n\n        _this.completeTransitions_();\n      } else {\n        _this.error_ = error;\n\n        _this.transition_(InternalTaskState.ERROR);\n      }\n    };\n\n    this.metadataErrorHandler_ = function (error) {\n      _this.request_ = null;\n\n      if (error.codeEquals(Code.CANCELED)) {\n        _this.completeTransitions_();\n      } else {\n        _this.error_ = error;\n\n        _this.transition_(InternalTaskState.ERROR);\n      }\n    };\n\n    this.promise_ = new Promise(function (resolve, reject) {\n      _this.resolve_ = resolve;\n      _this.reject_ = reject;\n\n      _this.start_();\n    }); // Prevent uncaught rejections on the internal promise from bubbling out\n    // to the top level with a dummy handler.\n\n    this.promise_.then(null, function () {});\n  }\n\n  UploadTask.prototype.makeProgressCallback_ = function () {\n    var _this = this;\n\n    var sizeBefore = this.transferred_;\n    return function (loaded) {\n      return _this.updateProgress_(sizeBefore + loaded);\n    };\n  };\n\n  UploadTask.prototype.shouldDoResumable_ = function (blob) {\n    return blob.size() > 256 * 1024;\n  };\n\n  UploadTask.prototype.start_ = function () {\n    if (this.state_ !== InternalTaskState.RUNNING) {\n      // This can happen if someone pauses us in a resume callback, for example.\n      return;\n    }\n\n    if (this.request_ !== null) {\n      return;\n    }\n\n    if (this.resumable_) {\n      if (this.uploadUrl_ === null) {\n        this.createResumable_();\n      } else {\n        if (this.needToFetchStatus_) {\n          this.fetchStatus_();\n        } else {\n          if (this.needToFetchMetadata_) {\n            // Happens if we miss the metadata on upload completion.\n            this.fetchMetadata_();\n          } else {\n            this.continueUpload_();\n          }\n        }\n      }\n    } else {\n      this.oneShotUpload_();\n    }\n  };\n\n  UploadTask.prototype.resolveToken_ = function (callback) {\n    var _this = this; // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n\n    this.authWrapper_.getAuthToken().then(function (authToken) {\n      switch (_this.state_) {\n        case InternalTaskState.RUNNING:\n          callback(authToken);\n          break;\n\n        case InternalTaskState.CANCELING:\n          _this.transition_(InternalTaskState.CANCELED);\n\n          break;\n\n        case InternalTaskState.PAUSING:\n          _this.transition_(InternalTaskState.PAUSED);\n\n          break;\n      }\n    });\n  }; // TODO(andysoto): assert false\n\n\n  UploadTask.prototype.createResumable_ = function () {\n    var _this = this;\n\n    this.resolveToken_(function (authToken) {\n      var requestInfo = createResumableUpload(_this.authWrapper_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);\n\n      var createRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\n\n      _this.request_ = createRequest;\n      createRequest.getPromise().then(function (url) {\n        _this.request_ = null;\n        _this.uploadUrl_ = url;\n        _this.needToFetchStatus_ = false;\n\n        _this.completeTransitions_();\n      }, _this.errorHandler_);\n    });\n  };\n\n  UploadTask.prototype.fetchStatus_ = function () {\n    var _this = this; // TODO(andysoto): assert(this.uploadUrl_ !== null);\n\n\n    var url = this.uploadUrl_;\n    this.resolveToken_(function (authToken) {\n      var requestInfo = getResumableUploadStatus(_this.authWrapper_, _this.location_, url, _this.blob_);\n\n      var statusRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\n\n      _this.request_ = statusRequest;\n      statusRequest.getPromise().then(function (status) {\n        status = status;\n        _this.request_ = null;\n\n        _this.updateProgress_(status.current);\n\n        _this.needToFetchStatus_ = false;\n\n        if (status.finalized) {\n          _this.needToFetchMetadata_ = true;\n        }\n\n        _this.completeTransitions_();\n      }, _this.errorHandler_);\n    });\n  };\n\n  UploadTask.prototype.continueUpload_ = function () {\n    var _this = this;\n\n    var chunkSize = resumableUploadChunkSize * this.chunkMultiplier_;\n    var status = new ResumableUploadStatus(this.transferred_, this.blob_.size()); // TODO(andysoto): assert(this.uploadUrl_ !== null);\n\n    var url = this.uploadUrl_;\n    this.resolveToken_(function (authToken) {\n      var requestInfo;\n\n      try {\n        requestInfo = continueResumableUpload(_this.location_, _this.authWrapper_, url, _this.blob_, chunkSize, _this.mappings_, status, _this.makeProgressCallback_());\n      } catch (e) {\n        _this.error_ = e;\n\n        _this.transition_(InternalTaskState.ERROR);\n\n        return;\n      }\n\n      var uploadRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\n\n      _this.request_ = uploadRequest;\n      uploadRequest.getPromise().then(function (newStatus) {\n        _this.increaseMultiplier_();\n\n        _this.request_ = null;\n\n        _this.updateProgress_(newStatus.current);\n\n        if (newStatus.finalized) {\n          _this.metadata_ = newStatus.metadata;\n\n          _this.transition_(InternalTaskState.SUCCESS);\n        } else {\n          _this.completeTransitions_();\n        }\n      }, _this.errorHandler_);\n    });\n  };\n\n  UploadTask.prototype.increaseMultiplier_ = function () {\n    var currentSize = resumableUploadChunkSize * this.chunkMultiplier_; // Max chunk size is 32M.\n\n    if (currentSize < 32 * 1024 * 1024) {\n      this.chunkMultiplier_ *= 2;\n    }\n  };\n\n  UploadTask.prototype.fetchMetadata_ = function () {\n    var _this = this;\n\n    this.resolveToken_(function (authToken) {\n      var requestInfo = getMetadata(_this.authWrapper_, _this.location_, _this.mappings_);\n\n      var metadataRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\n\n      _this.request_ = metadataRequest;\n      metadataRequest.getPromise().then(function (metadata) {\n        _this.request_ = null;\n        _this.metadata_ = metadata;\n\n        _this.transition_(InternalTaskState.SUCCESS);\n      }, _this.metadataErrorHandler_);\n    });\n  };\n\n  UploadTask.prototype.oneShotUpload_ = function () {\n    var _this = this;\n\n    this.resolveToken_(function (authToken) {\n      var requestInfo = multipartUpload(_this.authWrapper_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);\n\n      var multipartRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\n\n      _this.request_ = multipartRequest;\n      multipartRequest.getPromise().then(function (metadata) {\n        _this.request_ = null;\n        _this.metadata_ = metadata;\n\n        _this.updateProgress_(_this.blob_.size());\n\n        _this.transition_(InternalTaskState.SUCCESS);\n      }, _this.errorHandler_);\n    });\n  };\n\n  UploadTask.prototype.updateProgress_ = function (transferred) {\n    var old = this.transferred_;\n    this.transferred_ = transferred; // A progress update can make the \"transferred\" value smaller (e.g. a\n    // partial upload not completed by server, after which the \"transferred\"\n    // value may reset to the value at the beginning of the request).\n\n    if (this.transferred_ !== old) {\n      this.notifyObservers_();\n    }\n  };\n\n  UploadTask.prototype.transition_ = function (state) {\n    if (this.state_ === state) {\n      return;\n    }\n\n    switch (state) {\n      case InternalTaskState.CANCELING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        this.state_ = state;\n\n        if (this.request_ !== null) {\n          this.request_.cancel();\n        }\n\n        break;\n\n      case InternalTaskState.PAUSING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING);\n        this.state_ = state;\n\n        if (this.request_ !== null) {\n          this.request_.cancel();\n        }\n\n        break;\n\n      case InternalTaskState.RUNNING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        var wasPaused = this.state_ === InternalTaskState.PAUSED;\n        this.state_ = state;\n\n        if (wasPaused) {\n          this.notifyObservers_();\n          this.start_();\n        }\n\n        break;\n\n      case InternalTaskState.PAUSED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSING);\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n\n      case InternalTaskState.CANCELED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this.error_ = canceled();\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n\n      case InternalTaskState.ERROR:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n\n      case InternalTaskState.SUCCESS:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n    }\n  };\n\n  UploadTask.prototype.completeTransitions_ = function () {\n    switch (this.state_) {\n      case InternalTaskState.PAUSING:\n        this.transition_(InternalTaskState.PAUSED);\n        break;\n\n      case InternalTaskState.CANCELING:\n        this.transition_(InternalTaskState.CANCELED);\n        break;\n\n      case InternalTaskState.RUNNING:\n        this.start_();\n        break;\n    }\n  };\n\n  Object.defineProperty(UploadTask.prototype, \"snapshot\", {\n    get: function get() {\n      var externalState = taskStateFromInternalTaskState(this.state_);\n      return new UploadTaskSnapshot(this.transferred_, this.blob_.size(), externalState, this.metadata_, this, this.ref_);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Adds a callback for an event.\r\n   * @param type The type of event to listen for.\r\n   */\n\n  UploadTask.prototype.on = function (type, nextOrObserver, error, completed) {\n    function typeValidator() {\n      if (type !== TaskEvent.STATE_CHANGED) {\n        throw \"Expected one of the event types: [\" + TaskEvent.STATE_CHANGED + \"].\";\n      }\n    }\n\n    var nextOrObserverMessage = 'Expected a function or an Object with one of ' + '`next`, `error`, `complete` properties.';\n    var nextValidator = nullFunctionSpec(true).validator;\n    var observerValidator = looseObjectSpec(null, true).validator; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    function nextOrObserverValidator(p) {\n      try {\n        nextValidator(p);\n        return;\n      } catch (e) {}\n\n      try {\n        observerValidator(p);\n        var anyDefined = isJustDef(p['next']) || isJustDef(p['error']) || isJustDef(p['complete']);\n\n        if (!anyDefined) {\n          throw '';\n        }\n\n        return;\n      } catch (e) {\n        throw nextOrObserverMessage;\n      }\n    }\n\n    var specs = [stringSpec(typeValidator), looseObjectSpec(nextOrObserverValidator, true), nullFunctionSpec(true), nullFunctionSpec(true)];\n    validate('on', specs, arguments);\n    var self = this;\n\n    function makeBinder(specs) {\n      function binder(nextOrObserver, error, complete) {\n        if (specs !== null) {\n          validate('on', specs, arguments);\n        }\n\n        var observer = new Observer(nextOrObserver, error, completed);\n        self.addObserver_(observer);\n        return function () {\n          self.removeObserver_(observer);\n        };\n      }\n\n      return binder;\n    }\n\n    function binderNextOrObserverValidator(p) {\n      if (p === null) {\n        throw nextOrObserverMessage;\n      }\n\n      nextOrObserverValidator(p);\n    }\n\n    var binderSpecs = [looseObjectSpec(binderNextOrObserverValidator), nullFunctionSpec(true), nullFunctionSpec(true)];\n    var typeOnly = !(isJustDef(nextOrObserver) || isJustDef(error) || isJustDef(completed));\n\n    if (typeOnly) {\n      return makeBinder(binderSpecs);\n    } else {\n      return makeBinder(null)(nextOrObserver, error, completed);\n    }\n  };\n  /**\r\n   * This object behaves like a Promise, and resolves with its snapshot data\r\n   * when the upload completes.\r\n   * @param onFulfilled The fulfillment callback. Promise chaining works as normal.\r\n   * @param onRejected The rejection callback.\r\n   */\n\n\n  UploadTask.prototype.then = function (onFulfilled, onRejected) {\n    // These casts are needed so that TypeScript can infer the types of the\n    // resulting Promise.\n    return this.promise_.then(onFulfilled, onRejected);\n  };\n  /**\r\n   * Equivalent to calling `then(null, onRejected)`.\r\n   */\n\n\n  UploadTask.prototype.catch = function (onRejected) {\n    return this.then(null, onRejected);\n  };\n  /**\r\n   * Adds the given observer.\r\n   */\n\n\n  UploadTask.prototype.addObserver_ = function (observer) {\n    this.observers_.push(observer);\n    this.notifyObserver_(observer);\n  };\n  /**\r\n   * Removes the given observer.\r\n   */\n\n\n  UploadTask.prototype.removeObserver_ = function (observer) {\n    var i = this.observers_.indexOf(observer);\n\n    if (i !== -1) {\n      this.observers_.splice(i, 1);\n    }\n  };\n\n  UploadTask.prototype.notifyObservers_ = function () {\n    var _this = this;\n\n    this.finishPromise_();\n    var observers = this.observers_.slice();\n    observers.forEach(function (observer) {\n      _this.notifyObserver_(observer);\n    });\n  };\n\n  UploadTask.prototype.finishPromise_ = function () {\n    if (this.resolve_ !== null) {\n      var triggered = true;\n\n      switch (taskStateFromInternalTaskState(this.state_)) {\n        case TaskState.SUCCESS:\n          async(this.resolve_.bind(null, this.snapshot))();\n          break;\n\n        case TaskState.CANCELED:\n        case TaskState.ERROR:\n          var toCall = this.reject_;\n          async(toCall.bind(null, this.error_))();\n          break;\n\n        default:\n          triggered = false;\n          break;\n      }\n\n      if (triggered) {\n        this.resolve_ = null;\n        this.reject_ = null;\n      }\n    }\n  };\n\n  UploadTask.prototype.notifyObserver_ = function (observer) {\n    var externalState = taskStateFromInternalTaskState(this.state_);\n\n    switch (externalState) {\n      case TaskState.RUNNING:\n      case TaskState.PAUSED:\n        if (observer.next) {\n          async(observer.next.bind(observer, this.snapshot))();\n        }\n\n        break;\n\n      case TaskState.SUCCESS:\n        if (observer.complete) {\n          async(observer.complete.bind(observer))();\n        }\n\n        break;\n\n      case TaskState.CANCELED:\n      case TaskState.ERROR:\n        if (observer.error) {\n          async(observer.error.bind(observer, this.error_))();\n        }\n\n        break;\n\n      default:\n        // TODO(andysoto): assert(false);\n        if (observer.error) {\n          async(observer.error.bind(observer, this.error_))();\n        }\n\n    }\n  };\n  /**\r\n   * Resumes a paused task. Has no effect on a currently running or failed task.\r\n   * @return True if the operation took effect, false if ignored.\r\n   */\n\n\n  UploadTask.prototype.resume = function () {\n    validate('resume', [], arguments);\n    var valid = this.state_ === InternalTaskState.PAUSED || this.state_ === InternalTaskState.PAUSING;\n\n    if (valid) {\n      this.transition_(InternalTaskState.RUNNING);\n    }\n\n    return valid;\n  };\n  /**\r\n   * Pauses a currently running task. Has no effect on a paused or failed task.\r\n   * @return True if the operation took effect, false if ignored.\r\n   */\n\n\n  UploadTask.prototype.pause = function () {\n    validate('pause', [], arguments);\n    var valid = this.state_ === InternalTaskState.RUNNING;\n\n    if (valid) {\n      this.transition_(InternalTaskState.PAUSING);\n    }\n\n    return valid;\n  };\n  /**\r\n   * Cancels a currently running or paused task. Has no effect on a complete or\r\n   * failed task.\r\n   * @return True if the operation took effect, false if ignored.\r\n   */\n\n\n  UploadTask.prototype.cancel = function () {\n    validate('cancel', [], arguments);\n    var valid = this.state_ === InternalTaskState.RUNNING || this.state_ === InternalTaskState.PAUSING;\n\n    if (valid) {\n      this.transition_(InternalTaskState.CANCELING);\n    }\n\n    return valid;\n  };\n\n  return UploadTask;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Provides methods to interact with a bucket in the Firebase Storage service.\r\n * @param location An fbs.location, or the URL at\r\n *     which to base this object, in one of the following forms:\r\n *         gs://<bucket>/<object-path>\r\n *         http[s]://firebasestorage.googleapis.com/\r\n *                     <api-version>/b/<bucket>/o/<object-path>\r\n *     Any query or fragment strings will be ignored in the http[s]\r\n *     format. If no value is passed, the storage object will use a URL based on\r\n *     the project ID of the base firebase.App instance.\r\n */\n\n\nvar Reference =\n/** @class */\nfunction () {\n  function Reference(authWrapper, location) {\n    this.authWrapper = authWrapper;\n\n    if (location instanceof Location) {\n      this.location = location;\n    } else {\n      this.location = Location.makeFromUrl(location);\n    }\n  }\n  /**\r\n   * @return The URL for the bucket and path this object references,\r\n   *     in the form gs://<bucket>/<object-path>\r\n   * @override\r\n   */\n\n\n  Reference.prototype.toString = function () {\n    validate('toString', [], arguments);\n    return 'gs://' + this.location.bucket + '/' + this.location.path;\n  };\n\n  Reference.prototype.newRef = function (authWrapper, location) {\n    return new Reference(authWrapper, location);\n  };\n\n  Reference.prototype.mappings = function () {\n    return getMappings();\n  };\n  /**\r\n   * @return A reference to the object obtained by\r\n   *     appending childPath, removing any duplicate, beginning, or trailing\r\n   *     slashes.\r\n   */\n\n\n  Reference.prototype.child = function (childPath) {\n    validate('child', [stringSpec()], arguments);\n    var newPath = child(this.location.path, childPath);\n    var location = new Location(this.location.bucket, newPath);\n    return this.newRef(this.authWrapper, location);\n  };\n\n  Object.defineProperty(Reference.prototype, \"parent\", {\n    /**\r\n     * @return A reference to the parent of the\r\n     *     current object, or null if the current object is the root.\r\n     */\n    get: function get() {\n      var newPath = parent(this.location.path);\n\n      if (newPath === null) {\n        return null;\n      }\n\n      var location = new Location(this.location.bucket, newPath);\n      return this.newRef(this.authWrapper, location);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"root\", {\n    /**\r\n     * @return An reference to the root of this\r\n     *     object's bucket.\r\n     */\n    get: function get() {\n      var location = new Location(this.location.bucket, '');\n      return this.newRef(this.authWrapper, location);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"bucket\", {\n    get: function get() {\n      return this.location.bucket;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"fullPath\", {\n    get: function get() {\n      return this.location.path;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"name\", {\n    get: function get() {\n      return lastComponent(this.location.path);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"storage\", {\n    get: function get() {\n      return this.authWrapper.service();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Uploads a blob to this object's location.\r\n   * @param data The blob to upload.\r\n   * @return An UploadTask that lets you control and\r\n   *     observe the upload.\r\n   */\n\n  Reference.prototype.put = function (data, metadata) {\n    if (metadata === void 0) {\n      metadata = null;\n    }\n\n    validate('put', [uploadDataSpec(), metadataSpec(true)], arguments);\n    this.throwIfRoot_('put');\n    return new UploadTask(this, this.authWrapper, this.location, this.mappings(), new FbsBlob(data), metadata);\n  };\n  /**\r\n   * Uploads a string to this object's location.\r\n   * @param value The string to upload.\r\n   * @param format The format of the string to upload.\r\n   * @return An UploadTask that lets you control and\r\n   *     observe the upload.\r\n   */\n\n\n  Reference.prototype.putString = function (value, format, metadata) {\n    if (format === void 0) {\n      format = StringFormat.RAW;\n    }\n\n    validate('putString', [stringSpec(), stringSpec(formatValidator, true), metadataSpec(true)], arguments);\n    this.throwIfRoot_('putString');\n    var data = dataFromString(format, value);\n    var metadataClone = Object.assign({}, metadata);\n\n    if (!isDef(metadataClone['contentType']) && isDef(data.contentType)) {\n      metadataClone['contentType'] = data.contentType;\n    }\n\n    return new UploadTask(this, this.authWrapper, this.location, this.mappings(), new FbsBlob(data.data, true), metadataClone);\n  };\n  /**\r\n   * Deletes the object at this location.\r\n   * @return A promise that resolves if the deletion succeeds.\r\n   */\n\n\n  Reference.prototype.delete = function () {\n    var _this = this;\n\n    validate('delete', [], arguments);\n    this.throwIfRoot_('delete');\n    return this.authWrapper.getAuthToken().then(function (authToken) {\n      var requestInfo = deleteObject(_this.authWrapper, _this.location);\n      return _this.authWrapper.makeRequest(requestInfo, authToken).getPromise();\n    });\n  };\n  /**\r\n   * List all items (files) and prefixes (folders) under this storage reference.\r\n   *\r\n   * This is a helper method for calling list() repeatedly until there are\r\n   * no more results. The default pagination size is 1000.\r\n   *\r\n   * Note: The results may not be consistent if objects are changed while this\r\n   * operation is running.\r\n   *\r\n   * Warning: listAll may potentially consume too many resources if there are\r\n   * too many results.\r\n   *\r\n   * @return A Promise that resolves with all the items and prefixes under\r\n   *      the current storage reference. `prefixes` contains references to\r\n   *      sub-directories and `items` contains references to objects in this\r\n   *      folder. `nextPageToken` is never returned.\r\n   */\n\n\n  Reference.prototype.listAll = function () {\n    validate('listAll', [], arguments);\n    var accumulator = {\n      prefixes: [],\n      items: []\n    };\n    return this.listAllHelper(accumulator).then(function () {\n      return accumulator;\n    });\n  };\n\n  Reference.prototype.listAllHelper = function (accumulator, pageToken) {\n    return __awaiter(this, void 0, void 0, function () {\n      var opt, nextPage;\n\n      var _a, _b;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            opt = {\n              // maxResults is 1000 by default.\n              pageToken: pageToken\n            };\n            return [4\n            /*yield*/\n            , this.list(opt)];\n\n          case 1:\n            nextPage = _c.sent();\n\n            (_a = accumulator.prefixes).push.apply(_a, nextPage.prefixes);\n\n            (_b = accumulator.items).push.apply(_b, nextPage.items);\n\n            if (!(nextPage.nextPageToken != null)) return [3\n            /*break*/\n            , 3];\n            return [4\n            /*yield*/\n            , this.listAllHelper(accumulator, nextPage.nextPageToken)];\n\n          case 2:\n            _c.sent();\n\n            _c.label = 3;\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * List items (files) and prefixes (folders) under this storage reference.\r\n   *\r\n   * List API is only available for Firebase Rules Version 2.\r\n   *\r\n   * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n   * delimited folder structure.\r\n   * Refer to GCS's List API if you want to learn more.\r\n   *\r\n   * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n   * support objects whose paths end with \"/\" or contain two consecutive\r\n   * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n   * list() may fail if there are too many unsupported objects in the bucket.\r\n   *\r\n   * @param options See ListOptions for details.\r\n   * @return A Promise that resolves with the items and prefixes.\r\n   *      `prefixes` contains references to sub-folders and `items`\r\n   *      contains references to objects in this folder. `nextPageToken`\r\n   *      can be used to get the rest of the results.\r\n   */\n\n\n  Reference.prototype.list = function (options) {\n    validate('list', [listOptionSpec(true)], arguments);\n    var self = this;\n    return this.authWrapper.getAuthToken().then(function (authToken) {\n      var op = options || {};\n      var requestInfo = list(self.authWrapper, self.location,\n      /*delimiter= */\n      '/', op.pageToken, op.maxResults);\n      return self.authWrapper.makeRequest(requestInfo, authToken).getPromise();\n    });\n  };\n  /**\r\n   *     A promise that resolves with the metadata for this object. If this\r\n   *     object doesn't exist or metadata cannot be retreived, the promise is\r\n   *     rejected.\r\n   */\n\n\n  Reference.prototype.getMetadata = function () {\n    var _this = this;\n\n    validate('getMetadata', [], arguments);\n    this.throwIfRoot_('getMetadata');\n    return this.authWrapper.getAuthToken().then(function (authToken) {\n      var requestInfo = getMetadata(_this.authWrapper, _this.location, _this.mappings());\n      return _this.authWrapper.makeRequest(requestInfo, authToken).getPromise();\n    });\n  };\n  /**\r\n   * Updates the metadata for this object.\r\n   * @param metadata The new metadata for the object.\r\n   *     Only values that have been explicitly set will be changed. Explicitly\r\n   *     setting a value to null will remove the metadata.\r\n   * @return A promise that resolves\r\n   *     with the new metadata for this object.\r\n   *     @see firebaseStorage.Reference.prototype.getMetadata\r\n   */\n\n\n  Reference.prototype.updateMetadata = function (metadata) {\n    var _this = this;\n\n    validate('updateMetadata', [metadataSpec()], arguments);\n    this.throwIfRoot_('updateMetadata');\n    return this.authWrapper.getAuthToken().then(function (authToken) {\n      var requestInfo = updateMetadata(_this.authWrapper, _this.location, metadata, _this.mappings());\n      return _this.authWrapper.makeRequest(requestInfo, authToken).getPromise();\n    });\n  };\n  /**\r\n   * @return A promise that resolves with the download\r\n   *     URL for this object.\r\n   */\n\n\n  Reference.prototype.getDownloadURL = function () {\n    var _this = this;\n\n    validate('getDownloadURL', [], arguments);\n    this.throwIfRoot_('getDownloadURL');\n    return this.authWrapper.getAuthToken().then(function (authToken) {\n      var requestInfo = getDownloadUrl(_this.authWrapper, _this.location, _this.mappings());\n      return _this.authWrapper.makeRequest(requestInfo, authToken).getPromise().then(function (url) {\n        if (url === null) {\n          throw noDownloadURL();\n        }\n\n        return url;\n      });\n    });\n  };\n\n  Reference.prototype.throwIfRoot_ = function (name) {\n    if (this.location.path === '') {\n      throw invalidRootOperation(name);\n    }\n  };\n\n  return Reference;\n}();\n/**\r\n * A request whose promise always fails.\r\n * @struct\r\n * @template T\r\n */\n\n\nvar FailRequest =\n/** @class */\nfunction () {\n  function FailRequest(error) {\n    this.promise_ = Promise.reject(error);\n  }\n  /** @inheritDoc */\n\n\n  FailRequest.prototype.getPromise = function () {\n    return this.promise_;\n  };\n  /** @inheritDoc */\n\n\n  FailRequest.prototype.cancel = function (_appDelete) {};\n\n  return FailRequest;\n}();\n\nvar RequestMap =\n/** @class */\nfunction () {\n  function RequestMap() {\n    this.map = new Map();\n    this.id = MIN_SAFE_INTEGER;\n  }\n  /**\r\n   * Registers the given request with this map.\r\n   * The request is unregistered when it completes.\r\n   *\r\n   * @param request The request to register.\r\n   */\n\n\n  RequestMap.prototype.addRequest = function (request) {\n    var _this = this;\n\n    var id = this.id;\n    this.id++;\n    this.map.set(id, request);\n    request.getPromise().then(function () {\n      return _this.map.delete(id);\n    }, function () {\n      return _this.map.delete(id);\n    });\n  };\n  /**\r\n   * Cancels all registered requests.\r\n   */\n\n\n  RequestMap.prototype.clear = function () {\n    this.map.forEach(function (v) {\n      v && v.cancel(true);\n    });\n    this.map.clear();\n  };\n\n  return RequestMap;\n}();\n/**\r\n * @param app If null, getAuthToken always resolves with null.\r\n * @param service The storage service associated with this auth wrapper.\r\n *     Untyped to avoid circular type dependencies.\r\n * @struct\r\n */\n\n\nvar AuthWrapper =\n/** @class */\nfunction () {\n  function AuthWrapper(app, authProvider, maker, requestMaker, service, pool) {\n    this.bucket_ = null;\n    this.deleted_ = false;\n    this.app_ = app;\n\n    if (this.app_ !== null) {\n      var options = this.app_.options;\n\n      if (isDef(options)) {\n        this.bucket_ = AuthWrapper.extractBucket_(options);\n      }\n    }\n\n    this.authProvider_ = authProvider;\n    this.storageRefMaker_ = maker;\n    this.requestMaker_ = requestMaker;\n    this.pool_ = pool;\n    this.service_ = service;\n    this.maxOperationRetryTime_ = DEFAULT_MAX_OPERATION_RETRY_TIME;\n    this.maxUploadRetryTime_ = DEFAULT_MAX_UPLOAD_RETRY_TIME;\n    this.requestMap_ = new RequestMap();\n  }\n\n  AuthWrapper.extractBucket_ = function (config) {\n    var bucketString = config[CONFIG_STORAGE_BUCKET_KEY] || null;\n\n    if (bucketString == null) {\n      return null;\n    }\n\n    var loc = Location.makeFromBucketSpec(bucketString);\n    return loc.bucket;\n  };\n\n  AuthWrapper.prototype.getAuthToken = function () {\n    var auth = this.authProvider_.getImmediate({\n      optional: true\n    });\n\n    if (auth) {\n      return auth.getToken().then(function (response) {\n        if (response !== null) {\n          return response.accessToken;\n        } else {\n          return null;\n        }\n      }, function () {\n        return null;\n      });\n    } else {\n      return Promise.resolve(null);\n    }\n  };\n\n  AuthWrapper.prototype.bucket = function () {\n    if (this.deleted_) {\n      throw appDeleted();\n    } else {\n      return this.bucket_;\n    }\n  };\n  /**\r\n   * The service associated with this auth wrapper. Untyped to avoid circular\r\n   * type dependencies.\r\n   */\n\n\n  AuthWrapper.prototype.service = function () {\n    return this.service_;\n  };\n  /**\r\n   * Returns a new firebaseStorage.Reference object referencing this AuthWrapper\r\n   * at the given Location.\r\n   * @param loc The Location.\r\n   * @return Actually a firebaseStorage.Reference, typing not allowed\r\n   *     because of circular dependency problems.\r\n   */\n\n\n  AuthWrapper.prototype.makeStorageReference = function (loc) {\n    return this.storageRefMaker_(this, loc);\n  };\n\n  AuthWrapper.prototype.makeRequest = function (requestInfo, authToken) {\n    if (!this.deleted_) {\n      var request = this.requestMaker_(requestInfo, authToken, this.pool_);\n      this.requestMap_.addRequest(request);\n      return request;\n    } else {\n      return new FailRequest(appDeleted());\n    }\n  };\n  /**\r\n   * Stop running requests and prevent more from being created.\r\n   */\n\n\n  AuthWrapper.prototype.deleteApp = function () {\n    this.deleted_ = true;\n    this.app_ = null;\n    this.requestMap_.clear();\n  };\n\n  AuthWrapper.prototype.maxUploadRetryTime = function () {\n    return this.maxUploadRetryTime_;\n  };\n\n  AuthWrapper.prototype.setMaxUploadRetryTime = function (time) {\n    this.maxUploadRetryTime_ = time;\n  };\n\n  AuthWrapper.prototype.maxOperationRetryTime = function () {\n    return this.maxOperationRetryTime_;\n  };\n\n  AuthWrapper.prototype.setMaxOperationRetryTime = function (time) {\n    this.maxOperationRetryTime_ = time;\n  };\n\n  return AuthWrapper;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param f May be invoked\r\n *     before the function returns.\r\n * @param callback Get all the arguments passed to the function\r\n *     passed to f, including the initial boolean.\r\n */\n\n\nfunction start(f, callback, timeout) {\n  // TODO(andysoto): make this code cleaner (probably refactor into an actual\n  // type instead of a bunch of functions with state shared in the closure)\n  var waitSeconds = 1; // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\n  // TODO: find a way to exclude Node type definition for storage because storage only works in browser\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  var timeoutId = null;\n  var hitTimeout = false;\n  var cancelState = 0;\n\n  function canceled() {\n    return cancelState === 2;\n  }\n\n  var triggeredCallback = false; // TODO: This disable can be removed and the 'ignoreRestArgs' option added to\n  // the no-explicit-any rule when ESlint releases it.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  function triggerCallback() {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    if (!triggeredCallback) {\n      triggeredCallback = true;\n      callback.apply(null, args);\n    }\n  }\n\n  function callWithDelay(millis) {\n    timeoutId = setTimeout(function () {\n      timeoutId = null;\n      f(handler, canceled());\n    }, millis);\n  } // TODO: This disable can be removed and the 'ignoreRestArgs' option added to\n  // the no-explicit-any rule when ESlint releases it.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  function handler(success) {\n    var args = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n\n    if (triggeredCallback) {\n      return;\n    }\n\n    if (success) {\n      triggerCallback.call.apply(triggerCallback, __spreadArrays([null, success], args));\n      return;\n    }\n\n    var mustStop = canceled() || hitTimeout;\n\n    if (mustStop) {\n      triggerCallback.call.apply(triggerCallback, __spreadArrays([null, success], args));\n      return;\n    }\n\n    if (waitSeconds < 64) {\n      /* TODO(andysoto): don't back off so quickly if we know we're offline. */\n      waitSeconds *= 2;\n    }\n\n    var waitMillis;\n\n    if (cancelState === 1) {\n      cancelState = 2;\n      waitMillis = 0;\n    } else {\n      waitMillis = (waitSeconds + Math.random()) * 1000;\n    }\n\n    callWithDelay(waitMillis);\n  }\n\n  var stopped = false;\n\n  function stop(wasTimeout) {\n    if (stopped) {\n      return;\n    }\n\n    stopped = true;\n\n    if (triggeredCallback) {\n      return;\n    }\n\n    if (timeoutId !== null) {\n      if (!wasTimeout) {\n        cancelState = 2;\n      }\n\n      clearTimeout(timeoutId);\n      callWithDelay(0);\n    } else {\n      if (!wasTimeout) {\n        cancelState = 1;\n      }\n    }\n  }\n\n  callWithDelay(0);\n  setTimeout(function () {\n    hitTimeout = true;\n    stop(true);\n  }, timeout);\n  return stop;\n}\n/**\r\n * Stops the retry loop from repeating.\r\n * If the function is currently \"in between\" retries, it is invoked immediately\r\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\r\n * after the current invocation finishes iff the current invocation would have\r\n * triggered another retry.\r\n */\n\n\nfunction stop(id) {\n  id(false);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @struct\r\n * @template T\r\n */\n\n\nvar NetworkRequest =\n/** @class */\nfunction () {\n  function NetworkRequest(url, method, headers, body, successCodes, additionalRetryCodes, callback, errorCallback, timeout, progressCallback, pool) {\n    var _this = this;\n\n    this.pendingXhr_ = null;\n    this.backoffId_ = null;\n    this.resolve_ = null;\n    this.reject_ = null;\n    this.canceled_ = false;\n    this.appDelete_ = false;\n    this.url_ = url;\n    this.method_ = method;\n    this.headers_ = headers;\n    this.body_ = body;\n    this.successCodes_ = successCodes.slice();\n    this.additionalRetryCodes_ = additionalRetryCodes.slice();\n    this.callback_ = callback;\n    this.errorCallback_ = errorCallback;\n    this.progressCallback_ = progressCallback;\n    this.timeout_ = timeout;\n    this.pool_ = pool;\n    this.promise_ = new Promise(function (resolve, reject) {\n      _this.resolve_ = resolve;\n      _this.reject_ = reject;\n\n      _this.start_();\n    });\n  }\n  /**\r\n   * Actually starts the retry loop.\r\n   */\n\n\n  NetworkRequest.prototype.start_ = function () {\n    var self = this;\n\n    function doTheRequest(backoffCallback, canceled) {\n      if (canceled) {\n        backoffCallback(false, new RequestEndStatus(false, null, true));\n        return;\n      }\n\n      var xhr = self.pool_.createXhrIo();\n      self.pendingXhr_ = xhr;\n\n      function progressListener(progressEvent) {\n        var loaded = progressEvent.loaded;\n        var total = progressEvent.lengthComputable ? progressEvent.total : -1;\n\n        if (self.progressCallback_ !== null) {\n          self.progressCallback_(loaded, total);\n        }\n      }\n\n      if (self.progressCallback_ !== null) {\n        xhr.addUploadProgressListener(progressListener);\n      } // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n\n      xhr.send(self.url_, self.method_, self.body_, self.headers_).then(function (xhr) {\n        if (self.progressCallback_ !== null) {\n          xhr.removeUploadProgressListener(progressListener);\n        }\n\n        self.pendingXhr_ = null;\n        xhr = xhr;\n        var hitServer = xhr.getErrorCode() === ErrorCode.NO_ERROR;\n        var status = xhr.getStatus();\n\n        if (!hitServer || self.isRetryStatusCode_(status)) {\n          var wasCanceled = xhr.getErrorCode() === ErrorCode.ABORT;\n          backoffCallback(false, new RequestEndStatus(false, null, wasCanceled));\n          return;\n        }\n\n        var successCode = self.successCodes_.indexOf(status) !== -1;\n        backoffCallback(true, new RequestEndStatus(successCode, xhr));\n      });\n    }\n    /**\r\n     * @param requestWentThrough True if the request eventually went\r\n     *     through, false if it hit the retry limit or was canceled.\r\n     */\n\n\n    function backoffDone(requestWentThrough, status) {\n      var resolve = self.resolve_;\n      var reject = self.reject_;\n      var xhr = status.xhr;\n\n      if (status.wasSuccessCode) {\n        try {\n          var result = self.callback_(xhr, xhr.getResponseText());\n\n          if (isJustDef(result)) {\n            resolve(result);\n          } else {\n            resolve();\n          }\n        } catch (e) {\n          reject(e);\n        }\n      } else {\n        if (xhr !== null) {\n          var err = unknown();\n          err.setServerResponseProp(xhr.getResponseText());\n\n          if (self.errorCallback_) {\n            reject(self.errorCallback_(xhr, err));\n          } else {\n            reject(err);\n          }\n        } else {\n          if (status.canceled) {\n            var err = self.appDelete_ ? appDeleted() : canceled();\n            reject(err);\n          } else {\n            var err = retryLimitExceeded();\n            reject(err);\n          }\n        }\n      }\n    }\n\n    if (this.canceled_) {\n      backoffDone(false, new RequestEndStatus(false, null, true));\n    } else {\n      this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);\n    }\n  };\n  /** @inheritDoc */\n\n\n  NetworkRequest.prototype.getPromise = function () {\n    return this.promise_;\n  };\n  /** @inheritDoc */\n\n\n  NetworkRequest.prototype.cancel = function (appDelete) {\n    this.canceled_ = true;\n    this.appDelete_ = appDelete || false;\n\n    if (this.backoffId_ !== null) {\n      stop(this.backoffId_);\n    }\n\n    if (this.pendingXhr_ !== null) {\n      this.pendingXhr_.abort();\n    }\n  };\n\n  NetworkRequest.prototype.isRetryStatusCode_ = function (status) {\n    // The codes for which to retry came from this page:\n    // https://cloud.google.com/storage/docs/exponential-backoff\n    var isFiveHundredCode = status >= 500 && status < 600;\n    var extraRetryCodes = [// Request Timeout: web server didn't receive full request in time.\n    408, // Too Many Requests: you're getting rate-limited, basically.\n    429];\n    var isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;\n    var isRequestSpecificRetryCode = this.additionalRetryCodes_.indexOf(status) !== -1;\n    return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\n  };\n\n  return NetworkRequest;\n}();\n/**\r\n * A collection of information about the result of a network request.\r\n * @param opt_canceled Defaults to false.\r\n * @struct\r\n */\n\n\nvar RequestEndStatus =\n/** @class */\nfunction () {\n  function RequestEndStatus(wasSuccessCode, xhr, canceled) {\n    this.wasSuccessCode = wasSuccessCode;\n    this.xhr = xhr;\n    this.canceled = !!canceled;\n  }\n\n  return RequestEndStatus;\n}();\n\nfunction addAuthHeader_(headers, authToken) {\n  if (authToken !== null && authToken.length > 0) {\n    headers['Authorization'] = 'Firebase ' + authToken;\n  }\n}\n\nfunction addVersionHeader_(headers) {\n  var version = typeof firebase !== 'undefined' ? firebase.SDK_VERSION : 'AppManager';\n  headers['X-Firebase-Storage-Version'] = 'webjs/' + version;\n}\n/**\r\n * @template T\r\n */\n\n\nfunction makeRequest(requestInfo, authToken, pool) {\n  var queryPart = makeQueryString(requestInfo.urlParams);\n  var url = requestInfo.url + queryPart;\n  var headers = Object.assign({}, requestInfo.headers);\n  addAuthHeader_(headers, authToken);\n  addVersionHeader_(headers);\n  return new NetworkRequest(url, requestInfo.method, headers, requestInfo.body, requestInfo.successCodes, requestInfo.additionalRetryCodes, requestInfo.handler, requestInfo.errorHandler, requestInfo.timeout, requestInfo.progressCallback, pool);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A service that provides firebaseStorage.Reference instances.\r\n * @param opt_url gs:// url to a custom Storage Bucket\r\n *\r\n * @struct\r\n */\n\n\nvar Service =\n/** @class */\nfunction () {\n  function Service(app, authProvider, pool, url) {\n    this.bucket_ = null;\n\n    function maker(authWrapper, loc) {\n      return new Reference(authWrapper, loc);\n    }\n\n    this.authWrapper_ = new AuthWrapper(app, authProvider, maker, makeRequest, this, pool);\n    this.app_ = app;\n\n    if (url != null) {\n      this.bucket_ = Location.makeFromBucketSpec(url);\n    } else {\n      var authWrapperBucket = this.authWrapper_.bucket();\n\n      if (authWrapperBucket != null) {\n        this.bucket_ = new Location(authWrapperBucket, '');\n      }\n    }\n\n    this.internals_ = new ServiceInternals(this);\n  }\n  /**\r\n   * Returns a firebaseStorage.Reference for the given path in the default\r\n   * bucket.\r\n   */\n\n\n  Service.prototype.ref = function (path) {\n    function validator(path) {\n      if (typeof path !== 'string') {\n        throw 'Path is not a string.';\n      }\n\n      if (/^[A-Za-z]+:\\/\\//.test(path)) {\n        throw 'Expected child path but got a URL, use refFromURL instead.';\n      }\n    }\n\n    validate('ref', [stringSpec(validator, true)], arguments);\n\n    if (this.bucket_ == null) {\n      throw new Error('No Storage Bucket defined in Firebase Options.');\n    }\n\n    var ref = new Reference(this.authWrapper_, this.bucket_);\n\n    if (path != null) {\n      return ref.child(path);\n    } else {\n      return ref;\n    }\n  };\n  /**\r\n   * Returns a firebaseStorage.Reference object for the given absolute URL,\r\n   * which must be a gs:// or http[s]:// URL.\r\n   */\n\n\n  Service.prototype.refFromURL = function (url) {\n    function validator(p) {\n      if (typeof p !== 'string') {\n        throw 'Path is not a string.';\n      }\n\n      if (!/^[A-Za-z]+:\\/\\//.test(p)) {\n        throw 'Expected full URL but got a child path, use ref instead.';\n      }\n\n      try {\n        Location.makeFromUrl(p);\n      } catch (e) {\n        throw 'Expected valid full URL but got an invalid one.';\n      }\n    }\n\n    validate('refFromURL', [stringSpec(validator, false)], arguments);\n    return new Reference(this.authWrapper_, url);\n  };\n\n  Object.defineProperty(Service.prototype, \"maxUploadRetryTime\", {\n    get: function get() {\n      return this.authWrapper_.maxUploadRetryTime();\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Service.prototype.setMaxUploadRetryTime = function (time) {\n    validate('setMaxUploadRetryTime', [nonNegativeNumberSpec()], arguments);\n    this.authWrapper_.setMaxUploadRetryTime(time);\n  };\n\n  Service.prototype.setMaxOperationRetryTime = function (time) {\n    validate('setMaxOperationRetryTime', [nonNegativeNumberSpec()], arguments);\n    this.authWrapper_.setMaxOperationRetryTime(time);\n  };\n\n  Object.defineProperty(Service.prototype, \"app\", {\n    get: function get() {\n      return this.app_;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Service.prototype, \"INTERNAL\", {\n    get: function get() {\n      return this.internals_;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return Service;\n}();\n/**\r\n * @struct\r\n */\n\n\nvar ServiceInternals =\n/** @class */\nfunction () {\n  function ServiceInternals(service) {\n    this.service_ = service;\n  }\n  /**\r\n   * Called when the associated app is deleted.\r\n   * @see {!fbs.AuthWrapper.prototype.deleteApp}\r\n   */\n\n\n  ServiceInternals.prototype.delete = function () {\n    this.service_.authWrapper_.deleteApp();\n    return Promise.resolve();\n  };\n\n  return ServiceInternals;\n}();\n\nvar name = \"@firebase/storage\";\nvar version = \"0.3.26\";\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Type constant for Firebase Storage.\r\n */\n\nvar STORAGE_TYPE = 'storage';\n\nfunction factory(container, url) {\n  // Dependencies\n  var app = container.getProvider('app').getImmediate();\n  var authProvider = container.getProvider('auth-internal');\n  return new Service(app, authProvider, new XhrIoPool(), url);\n}\n\nfunction registerStorage(instance) {\n  var namespaceExports = {\n    // no-inline\n    TaskState: TaskState,\n    TaskEvent: TaskEvent,\n    StringFormat: StringFormat,\n    Storage: Service,\n    Reference: Reference\n  };\n  instance.INTERNAL.registerComponent(new Component(STORAGE_TYPE, factory, \"PUBLIC\"\n  /* PUBLIC */\n  ).setServiceProps(namespaceExports).setMultipleInstances(true));\n  instance.registerVersion(name, version);\n}\n\nregisterStorage(firebase);\nexport { registerStorage };"],"sourceRoot":""}